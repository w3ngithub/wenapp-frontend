{"version":3,"sources":["routes/inBuiltApps/Notes/index.js","appRedux/actions/Notes.js"],"names":["Notes","onChange","notes","console","log","this","props","onGetSticky","notesList","react_default","a","createElement","Auxiliary","react_stickies_default","Component","connect","_ref","type","GET_STICKY"],"mappings":"opBAOMA,oMAMJC,SAAW,SAACC,GACVC,QAAQC,IAAI,UAAWF,4DALzB,WACEG,KAAKC,MAAMC,oCAOb,WAAS,IACAC,EAAaH,KAAKC,MAAlBE,UACP,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACER,MAAOM,EACPP,SAAUI,KAAKJ,mBAhBLa,aA4BLC,sBALf,SAAAC,GAEE,MAAO,CAACR,UAFwBQ,EAARd,MACjBM,YAI+B,CAACD,YC3Bd,SAACC,GAC1B,MAAO,CACLS,KAAMC,IACNV,eDwBWO,CAAwCf","file":"static/js/149.20083035.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport ReactStickies from 'react-stickies';\r\nimport Auxiliary from \"../../../util/Auxiliary\";\r\nimport {connect} from 'react-redux';\r\nimport {onGetSticky} from \"../../../appRedux/actions/Notes\";\r\n\r\n\r\nclass Notes extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.onGetSticky();\r\n  }\r\n\r\n  onChange = (notes) => {\r\n    console.log(\"notes: \", notes)\r\n  };\r\n\r\n  render() {\r\n    const {notesList} = this.props;\r\n    return (\r\n      <Auxiliary>\r\n        <ReactStickies\r\n          notes={notesList}\r\n          onChange={this.onChange}\r\n        />\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({notes}) {\r\n  const {notesList} = notes;\r\n  return {notesList};\r\n}\r\n\r\nexport default connect(mapStateToProps, {onGetSticky})(Notes);\r\n\r\n\r\n\r\n","import {\r\n  FETCH_ALL_NOTES_SUCCESS,\r\n  GET_STICKY,\r\n  NOTES_UPDATE,\r\n  UPDATE_ALL_NOTES_SUCCESS\r\n} from \"../../constants/ActionTypes\";\r\n\r\n\r\nexport const onGetSticky = (notesList) => {\r\n  return {\r\n    type: GET_STICKY,\r\n    notesList\r\n  };\r\n};\r\n\r\nexport const fetchStickySuccess = (notesList) => {\r\n  return {\r\n    type: FETCH_ALL_NOTES_SUCCESS,\r\n    payload: notesList\r\n  }\r\n};\r\n\r\nexport const onUpdateSticky = (notesList) => {\r\n  return {\r\n    type: NOTES_UPDATE,\r\n    notesList\r\n  };\r\n};\r\n\r\n\r\nexport const updateStickySuccess = (notesList) => {\r\n  return {\r\n    type: UPDATE_ALL_NOTES_SUCCESS,\r\n    payload: notesList\r\n  }\r\n};\r\n\r\n"],"sourceRoot":""}