{"version":3,"sources":["../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/polygon.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/distance.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-geo/index.js","../node_modules/react-simple-maps/lib/utils.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","../node_modules/react-simple-maps/lib/MapGroup.js","../node_modules/antd/es/timeline/TimelineItem.js","../node_modules/antd/es/timeline/Timeline.js","../node_modules/antd/es/timeline/index.js","../node_modules/react-simple-maps/lib/projectionConfig.js","../node_modules/react-simple-maps/lib/index.js","../node_modules/react-simple-maps/lib/ComposableMap.js","../node_modules/react-simple-maps/lib/projections.js","../node_modules/react-simple-maps/lib/ZoomableGroup.js","../node_modules/react-simple-maps/lib/ZoomableGlobe.js","../node_modules/react-simple-maps/lib/Geographies.js","../node_modules/react-simple-maps/lib/Geography.js","../node_modules/react-simple-maps/lib/Marker.js","../node_modules/react-simple-maps/lib/Markers.js","../node_modules/react-simple-maps/lib/Line.js","../node_modules/react-simple-maps/lib/Lines.js","../node_modules/react-simple-maps/lib/Annotation.js","../node_modules/react-simple-maps/lib/Annotations.js","../node_modules/react-simple-maps/lib/Graticule.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/noop.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/math.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/adder.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/constant.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/compose.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/circle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/identity.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/transform.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/stream.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/airy.js","../node_modules/d3-geo-projection/src/aitoff.js","../node_modules/d3-geo-projection/src/armadillo.js","../node_modules/d3-geo-projection/src/august.js","../node_modules/d3-geo-projection/src/baker.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo-projection/src/berghaus.js","../node_modules/d3-geo-projection/src/mollweide.js","../node_modules/d3-geo-projection/src/boggs.js","../node_modules/d3-geo-projection/src/parallel1.js","../node_modules/d3-geo-projection/src/sinusoidal.js","../node_modules/d3-geo-projection/src/bonne.js","../node_modules/d3-geo-projection/src/bottomley.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo-projection/src/bromley.js","../node_modules/d3-geo-projection/src/chamberlin.js","../node_modules/d3-geo-projection/src/collignon.js","../node_modules/d3-geo-projection/src/craig.js","../node_modules/d3-geo-projection/src/craster.js","../node_modules/d3-geo-projection/src/cylindricalEqualArea.js","../node_modules/d3-geo-projection/src/cylindricalStereographic.js","../node_modules/d3-geo-projection/src/eckert1.js","../node_modules/d3-geo-projection/src/eckert2.js","../node_modules/d3-geo-projection/src/eckert3.js","../node_modules/d3-geo-projection/src/eckert4.js","../node_modules/d3-geo-projection/src/eckert5.js","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/d3-geo-projection/src/eisenlohr.js","../node_modules/d3-geo-projection/src/fahey.js","../node_modules/d3-geo-projection/src/foucaut.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo-projection/src/gilbert.js","../node_modules/d3-geo-projection/src/gingery.js","../node_modules/d3-geo-projection/src/ginzburgPolyconic.js","../node_modules/d3-geo-projection/src/ginzburg4.js","../node_modules/d3-geo-projection/src/ginzburg5.js","../node_modules/d3-geo-projection/src/ginzburg6.js","../node_modules/d3-geo-projection/src/ginzburg8.js","../node_modules/d3-geo-projection/src/ginzburg9.js","../node_modules/d3-geo-projection/src/square.js","../node_modules/d3-geo-projection/src/gringorten.js","../node_modules/d3-geo-projection/src/elliptic.js","../node_modules/d3-geo-projection/src/guyou.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo-projection/src/hammer.js","../node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","../node_modules/d3-geo-projection/src/healpix.js","../node_modules/d3-geo-projection/src/hill.js","../node_modules/d3-geo-projection/src/sinuMollweide.js","../node_modules/d3-geo-projection/src/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/index.js","../node_modules/d3-geo-projection/src/interrupted/boggs.js","../node_modules/d3-geo-projection/src/interrupted/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/mollweide.js","../node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js","../node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js","../node_modules/d3-geo-projection/src/interrupted/sinusoidal.js","../node_modules/d3-geo-projection/src/kavrayskiy7.js","../node_modules/d3-geo-projection/src/lagrange.js","../node_modules/d3-geo-projection/src/larrivee.js","../node_modules/d3-geo-projection/src/laskowski.js","../node_modules/d3-geo-projection/src/littrow.js","../node_modules/d3-geo-projection/src/loximuthal.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/d3-geo-projection/src/modifiedStereographic.js","../node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","../node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","../node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","../node_modules/d3-geo-projection/src/naturalEarth.js","../node_modules/d3-geo-projection/src/nellHammer.js","../node_modules/d3-geo-projection/src/patterson.js","../node_modules/d3-geo-projection/src/polyconic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/area.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo-projection/src/polyhedral/matrix.js","../node_modules/d3-geo-projection/src/polyhedral/index.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo-projection/src/polyhedral/octahedron.js","../node_modules/d3-geo-projection/src/polyhedral/butterfly.js","../node_modules/d3-geo-projection/src/polyhedral/collignon.js","../node_modules/d3-geo-projection/src/polyhedral/waterman.js","../node_modules/d3-geo-projection/src/noop.js","../node_modules/d3-geo-projection/src/project/index.js","../node_modules/d3-geo-projection/src/project/clockwise.js","../node_modules/d3-geo-projection/src/project/contains.js","../node_modules/d3-geo-projection/src/quincuncial/index.js","../node_modules/d3-geo-projection/src/quincuncial/gringorten.js","../node_modules/d3-geo-projection/src/quincuncial/peirce.js","../node_modules/d3-geo-projection/src/quantize.js","../node_modules/d3-geo-projection/src/rectangularPolyconic.js","../node_modules/d3-geo-projection/src/robinson.js","../node_modules/d3-geo-projection/src/satellite.js","../node_modules/d3-geo-projection/src/stitch.js","../node_modules/d3-geo-projection/src/times.js","../node_modules/d3-geo-projection/src/twoPoint.js","../node_modules/d3-geo-projection/src/twoPointAzimuthal.js","../node_modules/d3-geo-projection/src/twoPointEquidistant.js","../node_modules/d3-geo-projection/src/vanDerGrinten.js","../node_modules/d3-geo-projection/src/vanDerGrinten2.js","../node_modules/d3-geo-projection/src/vanDerGrinten3.js","../node_modules/d3-geo-projection/src/vanDerGrinten4.js","../node_modules/d3-geo-projection/src/wagner4.js","../node_modules/d3-geo-projection/src/wagner6.js","../node_modules/d3-geo-projection/src/wagner7.js","../node_modules/d3-geo-projection/src/wiechel.js","../node_modules/d3-geo-projection/src/winkel3.js","../node_modules/d3-geo-projection/index.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/bbox.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-client/src/stitch.js","../node_modules/topojson-client/src/mesh.js","../node_modules/topojson-client/src/merge.js","../node_modules/topojson-client/src/bisect.js","../node_modules/topojson-client/src/neighbors.js","../node_modules/topojson-client/src/quantize.js","../node_modules/topojson-client/src/untransform.js","../node_modules/topojson-client/index.js"],"names":["adder","Adder","this","reset","prototype","constructor","s","t","add","y","_add","temp","valueOf","a","b","x","bv","av","epsilon","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","exp","log","floor","pow","sin","math_sign","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","i","n","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","bounds_linePoint","p","normal","inflection","phii","delta","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","merged","deltaMax","Infinity","sort","NaN","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","centroid","constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","src_circle","ring","center","precision","circle","c","apply","arguments","r","_","buffer","line","lines","rejoin","pop","concat","shift","result","clip_line","x0","y0","x1","y1","ax","ay","dx","dy","pointEqual","Intersection","points","other","entry","o","e","clip_polygon","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","polygon_link","start","current","isSubject","array","clipMax","clipMin","extent_clipExtent","visible","from","to","a1","corner","comparePoint","ca","cb","polygon","x__","y__","v__","x_","y_","v_","first","clean","activeStream","bufferStream","clipStream","linePoint","winding","a0","j","b0","b1","polygonInside","cleanInside","Object","src","max","min","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","_stream","extent","sum","polygonContains","angle","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","arc","intersection","phiArc","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","map","ringRadians","pointRadians","contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","X","Y","DX","DY","graticule","filter","outline","slice","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","A","identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","join","src_path","projection","projectionStream","contextStream","path","src_clip","pointVisible","clipLine","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","polar","q1","code","c0","v0","v00","point2","src_transform","methods","transformer","TransformStream","key","fit_fitExtent","h","clipExtent","scale","translate","fit_fitSize","size","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","projection_projection","projectionMutator","projectAt","projectRotate","theta","preclip","postclip","projectResample","projectTransform","recenter","clipAngle","fitExtent","fitSize","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","f","fy","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","g","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","projection_identity","sx","sy","transform","reflectX","reflectY","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","__webpack_require__","__webpack_exports__","defineProperty","exports","value","calculateResizeFactor","actualDimension","baseDimension","calculateMousePosition","props","zoom","resizeFactor","undefined","width","height","reference","canRotate","reverseRotation","item","returner","isChildOfType","createNewChildren","children","child","_react2","default","cloneElement","groupName","itemName","roundPath","replace","round","createConnectorPath","connectorType","endPoint","curve","e0","e1","createTextAnchor","computeBackdrop","backdrop","originalRotation","tl","br","obj","_react","__esModule","expectedTypes","indexOf","componentIdentifier","_typeof","Symbol","iterator","_extends","assign","target","source","call","_defineProperty","enumerable","configurable","writable","_defineProperties","descriptor","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","self","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","getPrototypeOf","__rest","getOwnPropertySymbols","propertyIsEnumerable","CheckableTag_CheckableTag","_React$Component","subClass","superClass","TypeError","create","_inherits","CheckableTag","react","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","handleClick","_this$props","checked","onChange","renderCheckableTag","_ref","_classNames","getPrefixCls","_a","customizePrefixCls","prefixCls","className","restProps","cls","classnames_default","onClick","tag_typeof","tag_defineProperty","tag_extends","tag_defineProperties","tag_setPrototypeOf","tag_createSuper","tag_isNativeReflectConstruct","tag_getPrototypeOf","tag_assertThisInitialized","tag_possibleConstructorReturn","tag_rest","PresetColorRegex","RegExp","colors","tag_Tag","tag_inherits","Tag","tag_classCallCheck","state","handleIconClick","stopPropagation","setVisible","renderTag","configProps","otherProps","isNeedWave","tagProps","es","wave","getTagClassName","style","getTagStyle","renderCloseIcon","warning","nextProps","color","isPresetColor","backgroundColor","_this$props2","_this$props3","onClose","afterClose","defaultPrevented","setState","test","closable","icon","defaultProps","react_lifecycles_compat_es","_createClass","defineProperties","MapGroup","_Component","Component","_props","createElement","TimelineItem_TimelineItem","_classNames2","_props$color","pending","dot","itemClassName","dotClassName","borderColor","position","timeline_TimelineItem","Timeline_extends","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","_iterableToArray","minLen","name","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","Timeline_defineProperty","Timeline_rest","Timeline_Timeline","Timeline","renderTimeline","_a$pending","pendingDot","mode","pendingNode","classString","pendingItem","timeLineItems","toArray","getPositionCls","ele","idx","truthyItems","itemsCount","count","lastCls","items","pendingClass","readyClass","Item","xOffset","yOffset","_ComposableMap","get","_interopRequireDefault","_ZoomableGroup","_ZoomableGlobe","_Geographies","_Geography","_Marker","_Markers","_Line","_Lines","_MapGroup","_Annotation","_Annotations","_Graticule","_projections2","_projectionConfig2","ComposableMap","bind","projectionConfig","_props2","showCenter","aspectRatio","viewBox","defs","preserveAspectRatio","fill","config","projectionName","baseProjection","projectionReference","_d3GeoProjection","_d3Geo","_projectionConfig","geoMercator","miller","geoMiller","times","geoTimes","robinson","geoRobinson","winkel3","geoWinkel3","eckert4","geoEckert4","geoAlbersUsa","geoOrthographic","_utils","ZoomableGroup","mouseX","mouseY","mouseXStart","mouseYStart","isPressed","resizeFactorX","resizeFactorY","handleMouseMove","handleMouseUp","handleMouseDown","handleTouchStart","handleTouchMove","handleResize","pageX","pageY","disablePanning","_ref2","touches","onMoveEnd","_state","_ref3","_state2","onMoveStart","_ref4","evt","preventDefault","_state3","_props3","zoomFactor","centerChanged","JSON","stringify","_props4","zoomableGroupNode","parentNode","getBoundingClientRect","xPercentageChange","yPercentageChange","_props5","window","addEventListener","preventTouchScroll","removeEventListener","_this2","_props6","_state4","ref","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","strokeWidth","ZoomableGlobe","initialRotation","clientX","clientY","differenceX","differenceY","sensitivity","newCenter","currentCenter","zoomableGlobeNode","_topojsonClient","Geographies","geographyPaths","shouldFetchGeographies","geography","parseGeographies","fetchGeographies","nextState","disableOptimization","geographyUrl","console","warn","cancelPendingRequest","objects","keys","request","XMLHttpRequest","open","onload","status","parse","responseText","onGeographyPathsLoaded","String","onerror","send","_xhr","abort","pathCache","Geography","hover","pressed","handleMouseEnter","handleMouseLeave","handleMouseClick","handleFocus","handleBlur","persist","onMouseEnter","onMouseLeave","_props7","onFocus","_props8","onBlur","_props9","cacheId","tabable","pathString","geoPath","renderPath","excludeProps","reduce","tabIndex","Marker","marker","preserveMarkerAspect","translation","lineString","isHidden","geoLength","_MapGroup2","Markers","_objectWithoutProperties","Line","end","buildPath","buildLineString","startLineString","endLineString","Lines","Annotation","hiddenStyle","stroke","markerEnd","connectorPath","textAnchor","Annotations","computeGraticule","geoGraticule","computeOutline","Graticule","renderGraticule","graticulePath","outlinePath","globe","pointerEvents","math_epsilon","rejoin_link","longitude","clipRectangle","fit","fitBounds","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectRotateTransform","transformRotate","fitWidth","fitHeight","math_abs","math_atan","math_atan2","math_cos","math_exp","math_floor","math_log","math_pow","src_math_sign","math_sin","math_tan","src_math_epsilon","math_epsilon2","math_pi","math_halfPi","math_quarterPi","sqrt1_2","SQRT1_2","sqrt2","math_sqrt","sqrtPi","math_tau","math_degrees","math_radians","math_asin","math_acos","sinh","cosh","airyRaw","beta","tanBeta_2","cosx","cosy","siny","cosz","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","airy","aitoffRaw","sincia","sinci","sinx","sinx_2","cosx_2","sin_2y","sin2y","cos2y","sin2x_2","fx","dxdx","dxdy","dydx","dydy","aitoff","armadilloRaw","sPhi0","tanPhi0","cosLambda","sinLambda","dxdLambda","dxdPhi","dydLambda","dydPhi","denominator","dPhi","armadillo","stream_","parallel","rotateStream","sphereStream","augustRaw","tanPhi","sin3Eta","eta","xi","arcosh","arsinh","cosEta","coshXi","august","sqrt8","baker_phi0","bakerRaw","cosPhi_2","tanPhi_2","baker","berghausRaw","lobes","theta0","α","cotα","berghaus","sr","delta0","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","mollweide","boggs_k","boggs_w","boggsRaw","boggs","parallel1","sinusoidalRaw","sinusoidal","bonneRaw","cotPhi0","rho","bonne","bottomleyRaw","sinPsi","centroid_z0","bottomley","fraction","bromleyRaw","bromley","chamberlin_distance","s1","s2","cosdLambda","sindPhi","sindLambda","chamberlin_angle","chamberlin_longitude","chamberlinRaw","p2","beta0","beta1","beta2","mean","chamberlinAfrica","chamberlin","R","collignonRaw","collignon","craigRaw","cosλ","craig","sqrt3","crasterRaw","craster","cylindricalEqualArea","cylindricalStereographicRaw","cylindricalStereographic","eckert1Raw","eckert1","eckert2Raw","eckert2","eckert3Raw","eckert3","eckert4Raw","eckert5Raw","eckert5","eckert6Raw","eckert6","eisenlohrK","eisenlohrRaw","s0","_0","_1","cos1","v2","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","eisenlohr","faheyK","faheyRaw","fahey","foucautRaw","cosk","foucaut","gilbertForward","gilbertInvert","src_gilbert","projectionType","gilbert","property","gingeryRaw","rho2","r2","rhoCosAlpha","k_","s_","gingeryLength","gingeryIntegrate","dTheta","x_halfPi","rhosinAlpha","sinRhoCosAlpha","halfPi_RhoCosAlpha","gingery","cRho","sRho","ginzburgPolyconic","xB","yB","m2","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","mcosAlpha","msinAlpha","dAlphadPhi","ginzburg4Raw","ginzburg4","ginzburg5Raw","ginzburg5","ginzburg6Raw","ginzburg6","ginzburg8Raw","lambda4","ginzburg8","ginzburg9Raw","ginzburg9","square","projectSquare","location","gringortenRaw","sLambda","sPhi","a2","secPhi","drdPhi","dp2dPhi","mu","nu","zeta","g2","zetaMug","f2","df","gringortenHexadecant","gringortenHexadecantInvert","gringorten","ellipticJ","twon","ellipticF","guyouRaw","K","psi","at","y_1","guyouComplexAtan","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticFi","ellipticJi","tn","guyouComplexDivide","guyou","hammerRaw","hammerQuarticAuthalicRaw","hammer","coefficient","hammerRetroazimuthalRaw","hammerRetroazimuthalRotation","hammerRetroazimuthal","rotate_","healpixParallel","healpixLambert","healpixRaw","H","dy1","healpix","hillRaw","L","Bt","rho0","K2","L2","omega","sinTheta","cosTheta","Bt_Bt1","C","hill","ratio","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","sinuMollweide","homolosineRaw","homolosine","interrupted_pointEqual","interpolateLine","resampled","interrupted","lobe","interpolateSphere","bound","boggs_lobes","interrupted_boggs","homolosine_lobes","interrupted_homolosine","mollweide_lobes","interrupted_mollweide","mollweideHemispheres_lobes","mollweideHemispheres","sinuMollweide_lobes","interrupted_sinuMollweide","sinusoidal_lobes","interrupted_sinusoidal","kavrayskiy7Raw","kavrayskiy7","lagrangeRaw","lagrange","spacing","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","f0","f1","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","larrivee","laskowskiRaw","lambdaPhi","laskowski","littrowRaw","y2_1","littrow","loximuthalRaw","loximuthal","millerRaw","modifiedStereographicRaw","zr","zi","ar","deltar","deltai","sinc","gs48","gs50","modifiedStereographic_miller","lee","modifiedStereographicAlaska","modifiedStereographic","modifiedStereographicGs48","modifiedStereographicGs50","modifiedStereographicMiller","modifiedStereographicLee","coefficients","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarParabolic","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarQuartic","mtFlatPolarSinusoidalRaw","mtFlatPolarSinusoidal","naturalEarthRaw","phi4","naturalEarth","nellHammerRaw","nellHammer","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonRaw","yc","patterson","polyconicRaw","area_phi00","polyconic","bounds_boundsStream","bounds_boundsPoint","src_bounds","matrix","subtract","matrix_angle","matrix_length","multiply","polyhedral","root","face","node","recurse","parent","edges","faceEdges","shared","found","sharedEdge","polyhedral_pointEqual","hasInverse","faceInvert","inverse","faceDegrees","proj","edge","multiPoint","notPoles","inside","some","octahedron","polyhedral_octahedron","butterfly","faceProjection","faces","collignonK","polyhedral_collignon","waterman","w5","xyz","waterman_cartesian","hexagon","waterman_spherical","cornerNormals","parents","normals","cosphi","src_noop","src_project","Error","projectFeature","projectFeatureCollection","projectGeometry","id","properties","projectGeometryCollection","sinkPoint","sinkLine","sinkPolygon","project_points","project_lines","polygons","holes","clockwise","hole","yi","pj","xj","yj","quincuncial","projectQuincuncial","quincuncial_gringorten","peirce","quantize","digits","quantizePoint","toFixed","quantizePoints","quantizePolygon","quantizeGeometry","quantizeFeature","rectangularPolyconicRaw","E","cotPhi","rectangularPolyconic","robinson_K","robinsonRaw","i0","di","bx","by","yy","satelliteRaw","P","vertical","satelliteVerticalRaw","cosOmega","sinOmega","satellite","tilt","epsilonInverse","stitch_x0","x0e","stitch_x1","x1e","stitch_y0","y0e","stitch_y1","y1e","normalizePoint","clampPoint","clampPoints","extractFragments","fragments","pointk","xk","yk","fragmentBefore","stitchFeature","stitchGeometry","fragment","startFragment","endFragment","fragmentByStart","fragmentByEnd","index","stitchFragments","stitch","timesRaw","twoPoint","raw","twoPointAzimuthalRaw","cosd","twoPointAzimuthalUsa","twoPointAzimuthal","twoPointEquidistantRaw","lambdaa","lambdab","z02","tanLambda0","S","za","zb","cosza","coszb","twoPointEquidistantUsa","twoPointEquidistant","vanDerGrintenRaw","A2","G","P2","P2_A2","G_P2","Q","x2_y2","c3","m1","theta1","vanDerGrinten","vanDerGrinten2Raw","vanDerGrinten2","vanDerGrinten3Raw","vanDerGrinten3","vanDerGrinten4Raw","B2","C2","BC","B_C2","B_3C","D","D2","C_","B_C","F_","sqrtF","vanDerGrinten4","wagner4_A","wagner4_B","wagner4Raw","wagner4","wagner6Raw","wagner6","wagner7Raw","wagner7","wiechelRaw","sin1_Phi","wiechel","winkel3Raw","F","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","topology","src_bbox","bbox","bboxPoint","bboxGeometry","arcs","feature_feature","feature_object","transformPoint","stitchedArcs","emptyIndex","flush","dp","ends","fg","unshift","gf","mesh","meshArcs","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","merge","mergeArcs","polygonsByArc","groups","extract","planarRingArea","group","neighbors","ki","bisect","lo","hi","mid","src_neighbors","indexesByArc","geometryType","indexes","ij","ik","splice","bb","untransform"],"mappings":"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","file":"static/js/13.64844e5c.chunk.js","sourcesContent":["// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    return this._circle = circle(_), this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport { clipExtent } from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { degrees, radians, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  dx,\n      dy,\n      lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      projectRotate,\n      // rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // clip extent\n  delta2 = 0.5,\n      projectResample = resample(projectTransform, delta2),\n      // precision\n  cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { degrees, pi, radians } from \"../math\";\nimport { projectionMutator } from \"./index\";\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}","import { abs, asin, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0),\n      n = (sy0 + sin(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n  var c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function (x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n}","import { asin, cos, sin } from \"../math\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}","import conicEqualArea from \"./conicEqualArea\";\nexport default function () {\n  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n}","import { epsilon } from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport { fitExtent, fitSize } from \"./fit\"; // The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\n\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function point(x, y) {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].point(x, y);\n      }\n    },\n    sphere: function sphere() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].sphere();\n      }\n    },\n    lineStart: function lineStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineStart();\n      }\n    },\n    lineEnd: function lineEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineEnd();\n      }\n    },\n    polygonStart: function polygonStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonStart();\n      }\n    },\n    polygonEnd: function polygonEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonEnd();\n      }\n    }\n  };\n} // A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\nexport default function () {\n  var cache,\n      cacheStream,\n      lower48 = albers(),\n      lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n  hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n  _point,\n      pointStream = {\n    point: function point(x, y) {\n      _point = [x, y];\n    }\n  };\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);\n  }\n\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    return reset();\n  };\n\n  albersUsa.fitExtent = function (extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function (size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import { abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { mercatorRaw } from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) {\n      if (y < -halfPi + epsilon) y = -halfPi + epsilon;\n    } else {\n      if (y > halfPi - epsilon) y = halfPi - epsilon;\n    }\n\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function (x, y) {\n    var fy = f - y,\n        r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import { clipExtent as _clipExtent } from \"../clip/extent\";\nimport identity from \"../identity\";\nimport { transformer } from \"../transform\";\nimport { fitExtent as _fitExtent, fitSize as _fitSize } from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function point(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      transform = identity,\n      // scale, translate and reflect\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      clip = identity,\n      // clip extent\n  cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = transform(clip(cacheStream = _stream));\n    },\n    clipExtent: function clipExtent(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : _clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function scale(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function translate(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function reflectX(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function reflectY(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function fitExtent(extent, object) {\n      return _fitExtent(projection, extent, object);\n    },\n    fitSize: function fitSize(size, object) {\n      return _fitSize(projection, size, object);\n    }\n  };\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export { default as geoArea } from \"./src/area\";\nexport { default as geoBounds } from \"./src/bounds\";\nexport { default as geoCentroid } from \"./src/centroid\";\nexport { default as geoCircle } from \"./src/circle\";\nexport { default as geoClipExtent } from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\nexport { default as geoContains } from \"./src/contains\";\nexport { default as geoDistance } from \"./src/distance\";\nexport { default as geoGraticule, graticule10 as geoGraticule10 } from \"./src/graticule\";\nexport { default as geoInterpolate } from \"./src/interpolate\";\nexport { default as geoLength } from \"./src/length\";\nexport { default as geoPath } from \"./src/path/index\";\nexport { default as geoAlbers } from \"./src/projection/albers\";\nexport { default as geoAlbersUsa } from \"./src/projection/albersUsa\";\nexport { default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw } from \"./src/projection/azimuthalEqualArea\";\nexport { default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw } from \"./src/projection/azimuthalEquidistant\";\nexport { default as geoConicConformal, conicConformalRaw as geoConicConformalRaw } from \"./src/projection/conicConformal\";\nexport { default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw } from \"./src/projection/conicEqualArea\";\nexport { default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw } from \"./src/projection/conicEquidistant\";\nexport { default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw } from \"./src/projection/equirectangular\";\nexport { default as geoGnomonic, gnomonicRaw as geoGnomonicRaw } from \"./src/projection/gnomonic\";\nexport { default as geoIdentity } from \"./src/projection/identity\";\nexport { default as geoProjection, projectionMutator as geoProjectionMutator } from \"./src/projection/index\";\nexport { default as geoMercator, mercatorRaw as geoMercatorRaw } from \"./src/projection/mercator\";\nexport { default as geoOrthographic, orthographicRaw as geoOrthographicRaw } from \"./src/projection/orthographic\";\nexport { default as geoStereographic, stereographicRaw as geoStereographicRaw } from \"./src/projection/stereographic\";\nexport { default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw } from \"./src/projection/transverseMercator\";\nexport { default as geoRotation } from \"./src/rotation\";\nexport { default as geoStream } from \"./src/stream\";\nexport { default as geoTransform } from \"./src/transform\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateResizeFactor = calculateResizeFactor;\nexports.calculateMousePosition = calculateMousePosition;\nexports.isChildOfType = isChildOfType;\nexports.createNewChildren = createNewChildren;\nexports.roundPath = roundPath;\nexports.createConnectorPath = createConnectorPath;\nexports.createTextAnchor = createTextAnchor;\nexports.computeBackdrop = computeBackdrop;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction calculateResizeFactor(actualDimension, baseDimension) {\n  if (actualDimension === 0) return 1;\n  return 1 / 100 * (100 / actualDimension * baseDimension);\n}\n\nfunction calculateMousePosition(direction, projection, props, zoom, resizeFactor) {\n  var center = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : props.center;\n  var width = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : props.width;\n  var height = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : props.height;\n  var reference = {\n    x: 0,\n    y: 1\n  };\n  var canRotate = !!projection.rotate;\n  var reverseRotation = !!canRotate ? projection.rotate().map(function (item) {\n    return -item;\n  }) : false;\n  var point = !!reverseRotation ? projection.rotate(reverseRotation)([-center[0], -center[1]]) : projection([center[0], center[1]]);\n  var returner = point ? (point[reference[direction]] - (reference[direction] === 0 ? width : height) / 2) * zoom * (1 / resizeFactor) : 0;\n  if (canRotate) projection.rotate([-reverseRotation[0], -reverseRotation[1], -reverseRotation[2]]);\n  return !!reverseRotation ? returner : -returner;\n}\n\nfunction isChildOfType(child, expectedTypes) {\n  return expectedTypes.indexOf(child.props.componentIdentifier) !== -1;\n}\n\nfunction createNewChildren(children, props) {\n  if (!children) return;\n\n  if (!children.length) {\n    return isChildOfType(children, [\"Geographies\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection\n    }) : isChildOfType(children, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection,\n      zoom: props.zoom,\n      width: props.width,\n      height: props.height,\n      groupName: props.groupName,\n      itemName: props.itemName\n    }) : children;\n  } else {\n    return children.map(function (child, i) {\n      if (!child) return;\n      return isChildOfType(child, [\"Geographies\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection\n      }) : isChildOfType(child, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection,\n        zoom: props.zoom,\n        width: props.width,\n        height: props.height,\n        groupName: props.groupName,\n        itemName: props.itemName\n      }) : child;\n    });\n  }\n}\n\nfunction roundPath(path, precision) {\n  if (!path) return;\n  var query = /[\\d\\.-][\\d\\.e-]*/g;\n  return path.replace(query, function (n) {\n    return Math.round(n * (1 / precision)) / (1 / precision);\n  });\n}\n\nfunction createConnectorPath(connectorType, endPoint, curve) {\n  var e0 = endPoint[0];\n  var e1 = endPoint[1];\n  return \"M0,0 Q \" + (curve + 1) / 2 * e0 + \",\" + (e1 - (curve + 1) / 2 * e1) + \" \" + e0 + \",\" + e1;\n}\n\nfunction createTextAnchor(dx) {\n  if (dx > 0) return \"start\";else if (dx < 0) return \"end\";else return \"middle\";\n}\n\nfunction computeBackdrop(projection, backdrop) {\n  var canRotate = projection.rotate;\n  var originalRotation = canRotate ? projection.rotate() : null;\n  var tl = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[0], backdrop.y[0]]) : projection([backdrop.x[0], backdrop.y[0]]);\n  var br = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[1], backdrop.y[1]]) : projection([backdrop.x[1], backdrop.y[1]]);\n  var x = tl ? tl[0] : 0;\n  var x0 = br ? br[0] : 0;\n  var y = tl ? tl[1] : 0;\n  var y0 = br ? br[1] : 0;\n  var width = x0 - x;\n  var height = y0 - y;\n  if (originalRotation) projection.rotate(originalRotation);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar CheckableTag = /*#__PURE__*/function (_React$Component) {\n  _inherits(CheckableTag, _React$Component);\n\n  var _super = _createSuper(CheckableTag);\n\n  function CheckableTag() {\n    var _this;\n\n    _classCallCheck(this, CheckableTag);\n\n    _this = _super.apply(this, arguments);\n\n    _this.handleClick = function () {\n      var _this$props = _this.props,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange;\n\n      if (onChange) {\n        onChange(!checked);\n      }\n    };\n\n    _this.renderCheckableTag = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          checked = _a.checked,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\"]);\n\n      var prefixCls = getPrefixCls('tag', customizePrefixCls);\n      var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n      delete restProps.onChange; // TypeScript cannot check delete now.\n\n      return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n        className: cls,\n        onClick: _this.handleClick\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckableTag, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderCheckableTag);\n    }\n  }]);\n\n  return CheckableTag;\n}(React.Component);\n\nexport { CheckableTag as default };","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport CheckableTag from './CheckableTag';\nimport { ConfigConsumer } from '../config-provider';\nimport { PresetColorTypes } from '../_util/colors';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\n\nvar Tag = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tag, _React$Component);\n\n  var _super = _createSuper(Tag);\n\n  function Tag(props) {\n    var _this;\n\n    _classCallCheck(this, Tag);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: true\n    };\n\n    _this.handleIconClick = function (e) {\n      e.stopPropagation();\n\n      _this.setVisible(false, e);\n    };\n\n    _this.renderTag = function (configProps) {\n      var _a = _this.props,\n          children = _a.children,\n          otherProps = __rest(_a, [\"children\"]);\n\n      var isNeedWave = 'onClick' in otherProps || children && children.type === 'a';\n      var tagProps = omit(otherProps, ['onClose', 'afterClose', 'color', 'visible', 'closable', 'prefixCls']);\n      return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n        className: _this.getTagClassName(configProps),\n        style: _this.getTagStyle()\n      }), children, _this.renderCloseIcon())) : /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n        className: _this.getTagClassName(configProps),\n        style: _this.getTagStyle()\n      }), children, _this.renderCloseIcon());\n    };\n\n    warning(!('afterClose' in props), 'Tag', \"'afterClose' will be deprecated, please use 'onClose', we will remove this in the next version.\");\n    return _this;\n  }\n\n  _createClass(Tag, [{\n    key: \"getTagStyle\",\n    value: function getTagStyle() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          style = _this$props.style;\n      var isPresetColor = this.isPresetColor();\n      return _extends({\n        backgroundColor: color && !isPresetColor ? color : undefined\n      }, style);\n    }\n  }, {\n    key: \"getTagClassName\",\n    value: function getTagClassName(_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props2 = this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          color = _this$props2.color;\n      var visible = this.state.visible;\n      var isPresetColor = this.isPresetColor();\n      var prefixCls = getPrefixCls('tag', customizePrefixCls);\n      return classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), isPresetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !isPresetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _classNames), className);\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible, e) {\n      var _this$props3 = this.props,\n          onClose = _this$props3.onClose,\n          afterClose = _this$props3.afterClose;\n\n      if (onClose) {\n        onClose(e);\n      }\n\n      if (afterClose && !onClose) {\n        // next version remove.\n        afterClose();\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (!('visible' in this.props)) {\n        this.setState({\n          visible: visible\n        });\n      }\n    }\n  }, {\n    key: \"isPresetColor\",\n    value: function isPresetColor() {\n      var color = this.props.color;\n\n      if (!color) {\n        return false;\n      }\n\n      return PresetColorRegex.test(color);\n    }\n  }, {\n    key: \"renderCloseIcon\",\n    value: function renderCloseIcon() {\n      var closable = this.props.closable;\n      return closable ? /*#__PURE__*/React.createElement(Icon, {\n        type: \"close\",\n        onClick: this.handleIconClick\n      }) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderTag);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('visible' in nextProps) {\n        return {\n          visible: nextProps.visible\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Tag;\n}(React.Component);\n\nTag.CheckableTag = CheckableTag;\nTag.defaultProps = {\n  closable: false\n};\npolyfill(Tag);\nexport default Tag;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MapGroup = function (_Component) {\n  _inherits(MapGroup, _Component);\n\n  function MapGroup() {\n    _classCallCheck(this, MapGroup);\n\n    return _possibleConstructorReturn(this, (MapGroup.__proto__ || Object.getPrototypeOf(MapGroup)).apply(this, arguments));\n  }\n\n  _createClass(MapGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          projection = _props.projection,\n          style = _props.style,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          groupName = _props.groupName,\n          itemName = _props.itemName;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-\" + groupName,\n        style: style\n      }, !children ? null : children.length === undefined ? _react2.default.cloneElement(children, {\n        projection: projection,\n        zoom: zoom,\n        width: width,\n        height: height\n      }) : children.map(function (child, i) {\n        return !child ? null : _react2.default.cloneElement(child, {\n          key: child.key || itemName + \"-\" + i,\n          projection: projection,\n          zoom: zoom,\n          width: width,\n          height: height\n        });\n      }));\n    }\n  }]);\n\n  return MapGroup;\n}(_react.Component);\n\nMapGroup.defaultProps = {\n  componentIdentifier: \"Group\",\n  groupName: \"group\",\n  itemName: \"group-item\"\n};\nexports.default = MapGroup;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\n\nvar TimelineItem = function TimelineItem(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames, _classNames2;\n\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        className = props.className,\n        _props$color = props.color,\n        color = _props$color === void 0 ? '' : _props$color,\n        children = props.children,\n        pending = props.pending,\n        dot = props.dot,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"color\", \"children\", \"pending\", \"dot\"]);\n\n    var prefixCls = getPrefixCls('timeline', customizePrefixCls);\n    var itemClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-pending\"), pending), _classNames), className);\n    var dotClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-head\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-head-custom\"), dot), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-head-\").concat(color), true), _classNames2));\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, omit(restProps, ['position']), {\n      className: itemClassName\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-tail\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: dotClassName,\n      style: {\n        borderColor: /blue|red|green|gray/.test(color) ? undefined : color\n      }\n    }, dot), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-content\")\n    }, children));\n  });\n};\n\nTimelineItem.defaultProps = {\n  color: 'blue',\n  pending: false,\n  position: ''\n};\nexport default TimelineItem;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TimelineItem from './TimelineItem';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Timeline = /*#__PURE__*/function (_React$Component) {\n  _inherits(Timeline, _React$Component);\n\n  var _super = _createSuper(Timeline);\n\n  function Timeline() {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _super.apply(this, arguments);\n\n    _this.renderTimeline = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          _a$pending = _a.pending,\n          pending = _a$pending === void 0 ? null : _a$pending,\n          pendingDot = _a.pendingDot,\n          children = _a.children,\n          className = _a.className,\n          reverse = _a.reverse,\n          mode = _a.mode,\n          restProps = __rest(_a, [\"prefixCls\", \"pending\", \"pendingDot\", \"children\", \"className\", \"reverse\", \"mode\"]);\n\n      var prefixCls = getPrefixCls('timeline', customizePrefixCls);\n      var pendingNode = typeof pending === 'boolean' ? null : pending;\n      var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-pending\"), !!pending), _defineProperty(_classNames, \"\".concat(prefixCls, \"-reverse\"), !!reverse), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(mode), !!mode), _classNames), className);\n      var pendingItem = pending ? /*#__PURE__*/React.createElement(TimelineItem, {\n        pending: !!pending,\n        dot: pendingDot || /*#__PURE__*/React.createElement(Icon, {\n          type: \"loading\"\n        })\n      }, pendingNode) : null;\n      var timeLineItems = reverse ? [pendingItem].concat(_toConsumableArray(React.Children.toArray(children).reverse())) : [].concat(_toConsumableArray(React.Children.toArray(children)), [pendingItem]);\n\n      var getPositionCls = function getPositionCls(ele, idx) {\n        if (mode === 'alternate') {\n          if (ele.props.position === 'right') return \"\".concat(prefixCls, \"-item-right\");\n          if (ele.props.position === 'left') return \"\".concat(prefixCls, \"-item-left\");\n          return idx % 2 === 0 ? \"\".concat(prefixCls, \"-item-left\") : \"\".concat(prefixCls, \"-item-right\");\n        }\n\n        if (mode === 'left') return \"\".concat(prefixCls, \"-item-left\");\n        if (mode === 'right') return \"\".concat(prefixCls, \"-item-right\");\n        if (ele.props.position === 'right') return \"\".concat(prefixCls, \"-item-right\");\n        return '';\n      }; // Remove falsy items\n\n\n      var truthyItems = timeLineItems.filter(function (item) {\n        return !!item;\n      });\n      var itemsCount = React.Children.count(truthyItems);\n      var lastCls = \"\".concat(prefixCls, \"-item-last\");\n      var items = React.Children.map(truthyItems, function (ele, idx) {\n        var pendingClass = idx === itemsCount - 2 ? lastCls : '';\n        var readyClass = idx === itemsCount - 1 ? lastCls : '';\n        return /*#__PURE__*/React.cloneElement(ele, {\n          className: classNames([ele.props.className, !reverse && !!pending ? pendingClass : readyClass, getPositionCls(ele, idx)])\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"ul\", _extends({}, restProps, {\n        className: classString\n      }), items);\n    };\n\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderTimeline);\n    }\n  }]);\n\n  return Timeline;\n}(React.Component);\n\nexport { Timeline as default };\nTimeline.Item = TimelineItem;\nTimeline.defaultProps = {\n  reverse: false,\n  mode: ''\n};","import Timeline from './Timeline';\nexport default Timeline;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  scale: 160,\n  xOffset: 0,\n  yOffset: 0,\n  rotation: [0, 0, 0],\n  precision: 0.1\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ComposableMap = require(\"./ComposableMap\");\n\nObject.defineProperty(exports, \"ComposableMap\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ComposableMap).default;\n  }\n});\n\nvar _ZoomableGroup = require(\"./ZoomableGroup\");\n\nObject.defineProperty(exports, \"ZoomableGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGroup).default;\n  }\n});\n\nvar _ZoomableGlobe = require(\"./ZoomableGlobe\");\n\nObject.defineProperty(exports, \"ZoomableGlobe\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGlobe).default;\n  }\n});\n\nvar _Geographies = require(\"./Geographies\");\n\nObject.defineProperty(exports, \"Geographies\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geographies).default;\n  }\n});\n\nvar _Geography = require(\"./Geography\");\n\nObject.defineProperty(exports, \"Geography\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geography).default;\n  }\n});\n\nvar _Marker = require(\"./Marker\");\n\nObject.defineProperty(exports, \"Marker\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Marker).default;\n  }\n});\n\nvar _Markers = require(\"./Markers\");\n\nObject.defineProperty(exports, \"Markers\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Markers).default;\n  }\n});\n\nvar _Line = require(\"./Line\");\n\nObject.defineProperty(exports, \"Line\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Line).default;\n  }\n});\n\nvar _Lines = require(\"./Lines\");\n\nObject.defineProperty(exports, \"Lines\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Lines).default;\n  }\n});\n\nvar _MapGroup = require(\"./MapGroup\");\n\nObject.defineProperty(exports, \"MapGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MapGroup).default;\n  }\n});\n\nvar _Annotation = require(\"./Annotation\");\n\nObject.defineProperty(exports, \"Annotation\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotation).default;\n  }\n});\n\nvar _Annotations = require(\"./Annotations\");\n\nObject.defineProperty(exports, \"Annotations\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotations).default;\n  }\n});\n\nvar _Graticule = require(\"./Graticule\");\n\nObject.defineProperty(exports, \"Graticule\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graticule).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _projections = require(\"./projections\");\n\nvar _projections2 = _interopRequireDefault(_projections);\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComposableMap = function (_Component) {\n  _inherits(ComposableMap, _Component);\n\n  function ComposableMap() {\n    _classCallCheck(this, ComposableMap);\n\n    var _this = _possibleConstructorReturn(this, (ComposableMap.__proto__ || Object.getPrototypeOf(ComposableMap)).call(this));\n\n    _this.projection = _this.projection.bind(_this);\n    return _this;\n  }\n\n  _createClass(ComposableMap, [{\n    key: \"projection\",\n    value: function projection() {\n      var _props = this.props,\n          projection = _props.projection,\n          projectionConfig = _props.projectionConfig,\n          width = _props.width,\n          height = _props.height;\n      return typeof projection !== \"function\" ? (0, _projections2.default)(width, height, projectionConfig, projection) : projection(width, height, projectionConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          style = _props2.style,\n          className = _props2.className,\n          showCenter = _props2.showCenter,\n          children = _props2.children,\n          aspectRatio = _props2.aspectRatio,\n          viewBox = _props2.viewBox,\n          defs = _props2.defs;\n      return _react2.default.createElement(\"svg\", {\n        width: width,\n        height: height,\n        viewBox: viewBox ? viewBox : \"0 0 \" + width + \" \" + height,\n        className: \"rsm-svg \" + (className || ''),\n        style: style,\n        preserveAspectRatio: aspectRatio\n      }, defs && _react2.default.createElement(\"defs\", null, defs), _react2.default.cloneElement(this.props.children, {\n        projection: this.projection(),\n        width: width,\n        height: height\n      }), showCenter && _react2.default.createElement(\"g\", null, _react2.default.createElement(\"rect\", {\n        x: width / 2 - 0.5,\n        y: 0,\n        width: 1,\n        height: height,\n        fill: \"#e91e63\"\n      }), _react2.default.createElement(\"rect\", {\n        x: 0,\n        y: height / 2 - 0.5,\n        width: width,\n        height: 1,\n        fill: \"#e91e63\"\n      })));\n    }\n  }]);\n\n  return ComposableMap;\n}(_react.Component);\n\nComposableMap.defaultProps = {\n  width: 800,\n  height: 450,\n  projection: \"times\",\n  projectionConfig: _projectionConfig2.default,\n  aspectRatio: \"xMidYMid\",\n  viewBox: null\n};\nexports.default = ComposableMap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGroup = function (_Component) {\n  _inherits(ZoomableGroup, _Component);\n\n  function ZoomableGroup(props) {\n    _classCallCheck(this, ZoomableGroup);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGroup.__proto__ || Object.getPrototypeOf(ZoomableGroup)).call(this, props));\n\n    var backdrop = (0, _utils.computeBackdrop)(props.projection, props.backdrop);\n    _this.state = {\n      mouseX: (0, _utils.calculateMousePosition)(\"x\", props.projection, props, props.zoom, 1),\n      mouseY: (0, _utils.calculateMousePosition)(\"y\", props.projection, props, props.zoom, 1),\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      resizeFactorX: 1,\n      resizeFactorY: 1,\n      backdrop: {\n        width: Math.round(backdrop.width),\n        height: Math.round(backdrop.height),\n        x: Math.round(backdrop.x),\n        y: Math.round(backdrop.y)\n      }\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGroup, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        mouseX: pageX - this.state.mouseXStart,\n        mouseY: pageY - this.state.mouseYStart\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY,\n          resizeFactorX = _state.resizeFactorX,\n          resizeFactorY = _state.resizeFactorY;\n      var _props = this.props,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          projection = _props.projection,\n          onMoveEnd = _props.onMoveEnd;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var newCenter = projection.invert([x, y]);\n      onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY;\n      if (this.props.disablePanning) return;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY,\n          resizeFactorX = _state2.resizeFactorX,\n          resizeFactorY = _state2.resizeFactorY;\n      var _props2 = this.props,\n          zoom = _props2.zoom,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          onMoveStart = _props2.onMoveStart;\n      this.setState({\n        isPressed: true,\n        mouseXStart: pageX - mouseX,\n        mouseYStart: pageY - mouseY\n      });\n      if (!onMoveStart) return;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var currentCenter = projection.invert([x, y]);\n      onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state3 = this.state,\n          mouseX = _state3.mouseX,\n          mouseY = _state3.mouseY,\n          resizeFactorX = _state3.resizeFactorX,\n          resizeFactorY = _state3.resizeFactorY;\n      var _props3 = this.props,\n          projection = _props3.projection,\n          center = _props3.center,\n          zoom = _props3.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        mouseX: centerChanged ? (0, _utils.calculateMousePosition)(\"x\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorX) : mouseX * zoomFactor,\n        mouseY: centerChanged ? (0, _utils.calculateMousePosition)(\"y\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorY) : mouseY * zoomFactor\n      });\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize() {\n      var _props4 = this.props,\n          width = _props4.width,\n          height = _props4.height,\n          projection = _props4.projection,\n          zoom = _props4.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      var xPercentageChange = 1 / resizeFactorX * this.state.resizeFactorX;\n      var yPercentageChange = 1 / resizeFactorY * this.state.resizeFactorY;\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: this.state.mouseX * xPercentageChange,\n        mouseY: this.state.mouseY * yPercentageChange\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props5 = this.props,\n          width = _props5.width,\n          height = _props5.height,\n          projection = _props5.projection,\n          zoom = _props5.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: (0, _utils.calculateMousePosition)(\"x\", projection, this.props, zoom, resizeFactorX),\n        mouseY: (0, _utils.calculateMousePosition)(\"y\", projection, this.props, zoom, resizeFactorY)\n      });\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props6 = this.props,\n          width = _props6.width,\n          height = _props6.height,\n          zoom = _props6.zoom,\n          style = _props6.style,\n          projection = _props6.projection,\n          children = _props6.children;\n      var _state4 = this.state,\n          mouseX = _state4.mouseX,\n          mouseY = _state4.mouseY,\n          resizeFactorX = _state4.resizeFactorX,\n          resizeFactorY = _state4.resizeFactorY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-group\",\n        ref: function ref(zoomableGroupNode) {\n          return _this2.zoomableGroupNode = zoomableGroupNode;\n        },\n        transform: \"\\n           translate(\\n             \" + Math.round((width / 2 + resizeFactorX * mouseX) * 100) / 100 + \"\\n             \" + Math.round((height / 2 + resizeFactorY * mouseY) * 100) / 100 + \"\\n           )\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, _react2.default.createElement(\"rect\", {\n        x: this.state.backdrop.x,\n        y: this.state.backdrop.y,\n        width: this.state.backdrop.width,\n        height: this.state.backdrop.height,\n        fill: \"transparent\",\n        style: {\n          strokeWidth: 0\n        }\n      }), (0, _utils.createNewChildren)(children, this.props));\n    }\n  }]);\n\n  return ZoomableGroup;\n}(_react.Component);\n\nZoomableGroup.defaultProps = {\n  center: [0, 0],\n  backdrop: {\n    x: [-179.9, 179.9],\n    y: [89.9, -89.9]\n  },\n  zoom: 1,\n  disablePanning: false\n};\nexports.default = ZoomableGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGlobe = function (_Component) {\n  _inherits(ZoomableGlobe, _Component);\n\n  function ZoomableGlobe(props) {\n    _classCallCheck(this, ZoomableGlobe);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGlobe.__proto__ || Object.getPrototypeOf(ZoomableGlobe)).call(this, props));\n\n    var initialRotation = props.projection.rotate();\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      rotation: [initialRotation[0] - props.center[0], initialRotation[1] - props.center[1], initialRotation[2]]\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGlobe, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      var differenceX = clientX - this.state.mouseXStart;\n      var differenceY = clientY - this.state.mouseYStart;\n      this.setState({\n        mouseX: clientX,\n        mouseY: clientY,\n        mouseXStart: clientX,\n        mouseYStart: clientY,\n        rotation: [this.state.rotation[0] + differenceX * this.props.sensitivity, this.state.rotation[1] - differenceY * this.props.sensitivity, this.state.rotation[2]]\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var newCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY,\n          clientX = _ref3.clientX,\n          clientY = _ref3.clientY;\n      if (this.props.disablePanning) return;\n      this.setState({\n        isPressed: true,\n        mouseXStart: clientX,\n        mouseYStart: clientY\n      });\n      if (!this.props.onMoveStart) return;\n      var currentCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY;\n      var _props = this.props,\n          projection = _props.projection,\n          center = _props.center,\n          zoom = _props.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        rotation: centerChanged ? [-nextProps.center[0], -nextProps.center[1], this.state.rotation[2]] : this.state.rotation\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          zoom = _props2.zoom;\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          width = _props3.width,\n          height = _props3.height,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          projection = _props3.projection,\n          children = _props3.children;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-globe\",\n        ref: function ref(zoomableGlobeNode) {\n          return _this2.zoomableGlobeNode = zoomableGlobeNode;\n        },\n        transform: \"\\n           translate(\" + width / 2 + \" \" + height / 2 + \")\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, (0, _utils.createNewChildren)(children, {\n        width: width,\n        height: height,\n        center: this.center,\n        backdrop: this.backdrop,\n        zoom: this.props.zoom,\n        disablePanning: this.props.disablePanning,\n        children: children,\n        projection: projection.rotate(this.state.rotation)\n      }));\n    }\n  }]);\n\n  return ZoomableGlobe;\n}(_react.Component);\n\nZoomableGlobe.defaultProps = {\n  center: [0, 0],\n  zoom: 1,\n  disablePanning: false,\n  sensitivity: 0.25\n};\nexports.default = ZoomableGlobe;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _topojsonClient = require(\"topojson-client\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Geographies = function (_Component) {\n  _inherits(Geographies, _Component);\n\n  function Geographies(props) {\n    _classCallCheck(this, Geographies);\n\n    var _this = _possibleConstructorReturn(this, (Geographies.__proto__ || Object.getPrototypeOf(Geographies)).call(this, props));\n\n    _this.state = {\n      geographyPaths: _this.shouldFetchGeographies(props.geography) ? [] : _this.parseGeographies(props.geography)\n    };\n    return _this;\n  }\n\n  _createClass(Geographies, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.geography !== this.props.geography) {\n        if (this.shouldFetchGeographies(nextProps.geography)) {\n          this.fetchGeographies(nextProps.geography);\n        } else {\n          this.setState({\n            geographyPaths: this.parseGeographies(nextProps.geography)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var geoPathsChanged = nextState.geographyPaths.length !== this.state.geographyPaths.length;\n      return geoPathsChanged || nextProps.disableOptimization;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.geographyUrl || this.props.geographyPaths) {\n        console.warn(\"You are using the deprecated geographyUrl or geographyPaths props. Use the new geography prop instead. Check out the new docs here: https://github.com/zcreativelabs/react-simple-maps#Geographies-component\");\n      }\n\n      if (this.shouldFetchGeographies(this.props.geography)) {\n        this.fetchGeographies(this.props.geography);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelPendingRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          style = _props.style,\n          children = _props.children;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-geographies\",\n        style: style\n      }, children(this.state.geographyPaths || [], projection));\n    }\n  }, {\n    key: \"shouldFetchGeographies\",\n    value: function shouldFetchGeographies(geography) {\n      return typeof geography === 'string';\n    }\n  }, {\n    key: \"parseGeographies\",\n    value: function parseGeographies(geography) {\n      if (Array.isArray(geography)) {\n        return geography;\n      }\n\n      if (Object.prototype.toString.call(geography) === '[object Object]') {\n        return (0, _topojsonClient.feature)(geography, geography.objects[Object.keys(geography.objects)[0]]).features;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"fetchGeographies\",\n    value: function fetchGeographies(geography) {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open(\"GET\", geography, true);\n\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          var geographyPaths = JSON.parse(request.responseText);\n\n          _this2.setState({\n            geographyPaths: _this2.parseGeographies(geographyPaths)\n          }, function () {\n            if (_this2.props.onGeographyPathsLoaded) {\n              _this2.props.onGeographyPathsLoaded(String(request.status));\n            }\n          });\n        } else {\n          if (_this2.props.onGeographyPathsLoaded) {\n            _this2.props.onGeographyPathsLoaded(String(request.status));\n          }\n        }\n      };\n\n      request.onerror = function () {\n        console.log(\"There was a connection error...\");\n      };\n\n      request.send();\n      this.cancelPendingRequest();\n      this._xhr = request;\n    }\n  }, {\n    key: \"cancelPendingRequest\",\n    value: function cancelPendingRequest() {\n      if (this._xhr) {\n        this._xhr.abort();\n\n        this._xhr = null;\n      }\n    }\n  }]);\n\n  return Geographies;\n}(_react.Component);\n\nGeographies.defaultProps = {\n  componentIdentifier: \"Geographies\",\n  disableOptimization: false,\n  geography: \"\"\n};\nexports.default = Geographies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar pathCache = {};\n\nvar renderPath = function renderPath(cacheId, geography, projection, round, precision) {\n  if (pathCache[cacheId]) return pathCache[cacheId];\n  var pathString = cacheId ? pathCache[cacheId] ? pathCache[cacheId] : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography) : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography);\n  if (cacheId) pathCache[cacheId] = pathString;\n  return pathString;\n};\n\nvar Geography = function (_Component) {\n  _inherits(Geography, _Component);\n\n  function Geography() {\n    _classCallCheck(this, Geography);\n\n    var _this = _possibleConstructorReturn(this, (Geography.__proto__ || Object.getPrototypeOf(Geography)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Geography, [{\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      evt.persist();\n      var _props = this.props,\n          onClick = _props.onClick,\n          geography = _props.geography;\n      return onClick && onClick(geography, evt);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props2 = this.props,\n          onMouseEnter = _props2.onMouseEnter,\n          geography = _props2.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props3 = this.props,\n          onMouseMove = _props3.onMouseMove,\n          geography = _props3.geography;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(geography, evt);\n        });\n      } else if (onMouseMove) onMouseMove(geography, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseLeave = _props4.onMouseLeave,\n          geography = _props4.geography;\n      this.setState({\n        hover: false,\n        pressed: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseDown = _props5.onMouseDown,\n          geography = _props5.geography;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props6 = this.props,\n          onMouseUp = _props6.onMouseUp,\n          geography = _props6.geography;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          geography = _props7.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          geography = _props8.geography;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(geography, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props9 = this.props,\n          geography = _props9.geography,\n          projection = _props9.projection,\n          round = _props9.round,\n          cacheId = _props9.cacheId,\n          precision = _props9.precision,\n          tabable = _props9.tabable,\n          style = _props9.style;\n      var _state = this.state,\n          hover = _state.hover,\n          pressed = _state.pressed;\n      var pathString = renderPath(cacheId, geography, projection, round, precision);\n      var excludeProps = [\"geography\", \"projection\", \"round\", \"cacheId\", \"precision\", \"tabable\", \"style\", \"onClick\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\"];\n      var restProps = Object.keys(this.props).filter(function (key) {\n        return excludeProps.indexOf(key) === -1;\n      }).reduce(function (obj, key) {\n        obj[key] = _this2.props[key];\n        return obj;\n      }, {});\n      return _react2.default.createElement(\"path\", _extends({\n        d: pathString,\n        className: \"rsm-geography\" + (pressed ? \" rsm-geography--pressed\" : \"\") + (hover ? \" rsm-geography--hover\" : \"\"),\n        style: style[pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onClick: this.handleMouseClick,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, restProps));\n    }\n  }]);\n\n  return Geography;\n}(_react.Component);\n\nGeography.defaultProps = {\n  precision: 0.1,\n  cacheId: null,\n  round: false,\n  tabable: true,\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  }\n};\nexports.default = Geography;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Marker = function (_Component) {\n  _inherits(Marker, _Component);\n\n  function Marker() {\n    _classCallCheck(this, Marker);\n\n    var _this = _possibleConstructorReturn(this, (Marker.__proto__ || Object.getPrototypeOf(Marker)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Marker, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          marker = _props.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          marker = _props2.marker;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(marker, evt);\n        });\n      } else if (onMouseMove) onMouseMove(marker, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          marker = _props3.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          marker = _props4.marker;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          marker = _props5.marker;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          marker = _props6.marker,\n          projection = _props6.projection;\n      return onClick && onClick(marker, projection(marker.coordinates), evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          marker = _props7.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          marker = _props8.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(marker, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          projection = _props9.projection,\n          marker = _props9.marker,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          children = _props9.children,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n      var translation = projection(marker.coordinates);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), marker.coordinates]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-marker\" + (pressed ? \" rsm-marker--pressed\" : \"\") + (hover ? \" rsm-marker--hover\" : \"\"),\n        transform: \"translate(\\n           \" + translation[0] + \"\\n           \" + translation[1] + \"\\n         ) \" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, children);\n    }\n  }]);\n\n  return Marker;\n}(_react.Component);\n\nMarker.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  marker: {\n    coordinates: [0, 0]\n  },\n  tabable: true,\n  preserveMarkerAspect: true\n};\nexports.default = Marker;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Markers = function Markers(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nMarkers.defaultProps = {\n  componentIdentifier: \"Markers\",\n  groupName: \"markers\",\n  itemName: \"marker\"\n};\nexports.default = Markers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Line = function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line(props) {\n    _classCallCheck(this, Line);\n\n    var _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          line = _props.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          line = _props2.line;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(line, evt);\n        });\n      } else if (onMouseMove) onMouseMove(line, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          line = _props3.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          line = _props4.line;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          line = _props5.line;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          line = _props6.line,\n          projection = _props6.projection;\n      return onClick && onClick(line, [projection(line.coordinates.start), projection(line.coordinates.end)], evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          line = _props7.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(line, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          line = _props8.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(line, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          className = _props9.className,\n          projection = _props9.projection,\n          line = _props9.line,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height,\n          buildPath = _props9.buildPath,\n          strokeWidth = _props9.strokeWidth;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n\n      var buildLineString = function buildLineString(coordinates) {\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"LineString\",\n            coordinates: [projection.invert([width / 2, height / 2]), coordinates]\n          }\n        };\n      };\n\n      var startLineString = buildLineString(line.coordinates.start);\n      var endLineString = buildLineString(line.coordinates.end);\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && ((0, _d3Geo.geoLength)(startLineString) > radians || (0, _d3Geo.geoLength)(endLineString) > radians);\n      var start = projection(line.coordinates.start);\n      var end = projection(line.coordinates.end);\n      var path = buildPath ? buildPath(start, end, line) : \"M \" + start.join(\" \") + \" L \" + end.join(\" \");\n      return _react2.default.createElement(\"path\", {\n        className: \"rsm-line\" + (pressed ? \" rsm-line--pressed\" : \"\") + (hover ? \" rsm-line--hover\" : \"\") + \" \" + className,\n        transform: \"\" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1,\n        d: path,\n        strokeWidth: strokeWidth\n      });\n    }\n  }]);\n\n  return Line;\n}(_react.Component);\n\nLine.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  line: {\n    coordinates: {\n      start: [0, 0],\n      end: [-99.1, 19.4]\n    }\n  },\n  tabable: true,\n  preserveMarkerAspect: true,\n  strokeWidth: 1,\n  className: \"\"\n};\nexports.default = Line;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Lines = function Lines(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nLines.defaultProps = {\n  componentIdentifier: \"Lines\",\n  groupName: \"lines\",\n  itemName: \"line\"\n};\nexports.default = Lines;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Annotation = function (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation() {\n    _classCallCheck(this, Annotation);\n\n    return _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).apply(this, arguments));\n  }\n\n  _createClass(Annotation, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          subject = _props.subject,\n          style = _props.style,\n          hiddenStyle = _props.hiddenStyle,\n          dx = _props.dx,\n          dy = _props.dy,\n          zoom = _props.zoom,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          children = _props.children,\n          curve = _props.curve,\n          markerEnd = _props.markerEnd,\n          width = _props.width,\n          height = _props.height;\n      var connectorPath = (0, _utils.createConnectorPath)(null, [-dx / zoom, -dy / zoom], curve);\n      var translation = projection(subject);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), subject]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-annotation\",\n        style: isHidden ? _extends({}, style, hiddenStyle) : style,\n        transform: \"translate(\\n          \" + (translation[0] + dx / zoom) + \"\\n          \" + (translation[1] + dy / zoom) + \"\\n        )\",\n        textAnchor: (0, _utils.createTextAnchor)(dx)\n      }, children, _react2.default.createElement(\"path\", {\n        d: connectorPath,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        fill: \"none\",\n        markerEnd: markerEnd\n      }));\n    }\n  }]);\n\n  return Annotation;\n}(_react.Component);\n\nAnnotation.defaultProps = {\n  curve: 0,\n  markerEnd: \"none\",\n  componentIdentifier: \"Annotation\",\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  zoom: 1\n};\nexports.default = Annotation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Annotations = function Annotations(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nAnnotations.defaultProps = {\n  componentIdentifier: \"Annotations\",\n  groupName: \"annotations\",\n  itemName: \"annotation\"\n};\nexports.default = Annotations;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar computeGraticule = function computeGraticule(projection, step) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().step(step)());\n};\n\nvar computeOutline = function computeOutline(projection) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().outline());\n};\n\nvar Graticule = function (_Component) {\n  _inherits(Graticule, _Component);\n\n  function Graticule() {\n    _classCallCheck(this, Graticule);\n\n    var _this = _possibleConstructorReturn(this, (Graticule.__proto__ || Object.getPrototypeOf(Graticule)).call(this));\n\n    _this.state = {\n      renderGraticule: false,\n      graticulePath: \"\",\n      outlinePath: \"\"\n    };\n    _this.renderGraticule = _this.renderGraticule.bind(_this);\n    return _this;\n  }\n\n  _createClass(Graticule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderGraticule();\n    }\n  }, {\n    key: \"renderGraticule\",\n    value: function renderGraticule() {\n      var _props = this.props,\n          step = _props.step,\n          projection = _props.projection,\n          round = _props.round,\n          precision = _props.precision;\n      this.setState({\n        renderGraticule: true,\n        graticulePath: round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n        outlinePath: round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _props2 = this.props,\n          step = _props2.step,\n          projection = _props2.projection,\n          round = _props2.round,\n          precision = _props2.precision,\n          globe = _props2.globe;\n\n      if (nextProps.round !== round || nextProps.precision !== precision || globe) {\n        this.setState({\n          graticulePath: nextProps.round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n          outlinePath: nextProps.round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.disableOptimization;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          outline = _props3.outline,\n          fill = _props3.fill,\n          stroke = _props3.stroke;\n      return this.state.renderGraticule && _react2.default.createElement(\"g\", {\n        className: \"rsm-graticule\"\n      }, _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.graticulePath,\n        style: style\n      }), outline && _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.outlinePath,\n        style: style\n      }));\n    }\n  }]);\n\n  return Graticule;\n}(_react.Component);\n\nGraticule.defaultProps = {\n  componentIdentifier: \"Graticule\",\n  disableOptimization: true,\n  globe: false,\n  round: true,\n  precision: 0.1,\n  step: [10, 10],\n  outline: true,\n  stroke: \"#DDDDDD\",\n  fill: \"transparent\",\n  style: {\n    pointerEvents: \"none\"\n  }\n};\nexports.default = Graticule;","export default function noop() {}","import noop from \"../noop.js\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","import { abs, epsilon } from \"./math.js\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual.js\";\nimport { epsilon } from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n\n        for (i = 0; i < n; ++i) {\n          stream.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        stream.lineEnd();\n        return;\n      } // handle degenerate cases by moving the point\n\n\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math.js\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { epsilon, halfPi } from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index.js\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math.js\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose.js\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math.js\";\nimport { rotateRadians } from \"./rotation.js\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian.js\";\nimport { circleStream } from \"../circle.js\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (x) {\n  return x;\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import noop from \"../noop.js\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { default as geoStream } from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math.js\";\nimport { transformer } from \"../transform.js\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math.js\";\nimport { rotateRadians } from \"../rotation.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\nimport resample from \"./resample.js\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate angle\n  sx = 1,\n      // reflectX\n  sy = 1,\n      // reflectX\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sin = Math.sin;\nexport var tan = Math.tan;\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan } from \"./math\";\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50,\n        delta;\n    if (!r) return [0, 0];\n\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function (_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p.scale(179.976).clipAngle(147);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, pi, sin, sinci, sqrt } from \"./math\";\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y),\n      sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n} // Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\n\naitoffRaw.invert = function (x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x,\n      y1 = y,\n      i = 25;\n\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n\n  return [x1, y1];\n};\n\nexport default function () {\n  return projection(aitoffRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, atan2, cos, degrees, epsilon, radians, sin, tan } from \"./math\";\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [(1 + cosPhi) * sin(lambda), (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\nexport default function () {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90) {\n        sphereStream.point(lambda, sPhi0 * 90);\n      }\n\n      while (sPhi0 * (lambda -= phi0) >= -180) {\n        // TODO precision?\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(218.695).center([0, 28.0974]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan } from \"./math\";\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [4 / 3 * x * (3 + x2 - 3 * y2), 4 / 3 * y * (3 + 3 * x2 - y2)];\n}\n\naugustRaw.invert = function (x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d), sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)];\n};\n\nexport default function () {\n  return projection(augustRaw).scale(66.1603);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan } from \"./math\";\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi ? [lambda, log(tan(quarterPi + phi / 2))] : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function (x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi,\n      i = 25,\n      delta,\n      y0;\n\n  do {\n    var cosPhi_2 = cos(phi / 2),\n        tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function () {\n  return projection(bakerRaw).scale(112.314);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math.js\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { acos, sin } from \"../math.js\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan } from \"./math\";\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n\n    if (abs(lambda) > halfPi) {\n      // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          α = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n\n      theta = theta0 + asin(pi / r * sin(α)) - α;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y);\n\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotα = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotα + s * sqrt(cotα * cotα - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\nexport default function () {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function (_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(87.8076).center([0, 17.1875]).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2 } from \"./math\";\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi),\n      i = 30,\n      delta;\n\n  do {\n    phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return phi / 2;\n}\nexport function mollweideBromleyRaw(cx, cy, cp) {\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\nexport default function () {\n  return projection(mollweideRaw).scale(169.529);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideBromleyTheta } from \"./mollweide\";\nimport { abs, cos, epsilon, pi, quarterPi, sin, sqrt2 } from \"./math\";\nvar k = 2.00276,\n    w = 1.11072;\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function (x, y) {\n  var ky = k * y,\n      theta = y < 0 ? -quarterPi : quarterPi,\n      i = 25,\n      delta,\n      phi;\n\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function () {\n  return projection(boggsRaw).scale(160.857);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { degrees, radians } from \"./math\";\nexport default function (projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function (_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos } from \"./math\";\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function (x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function () {\n  return projection(sinusoidalRaw).scale(152.63);\n}","import parallel1 from \"./parallel1\";\nimport { atan2, cos, sin, sqrt, tan } from \"./math\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(bonneRaw).scale(123.082).center([0, 26.1441]).parallel(45);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { atan2, cos, halfPi, sin, sqrt } from \"./math\";\nexport function bottomleyRaw(sinPsi) {\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function (x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\nexport default function () {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function (_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p.scale(158.837);\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\nexport default function () {\n  return projection(bromleyRaw).scale(152.63);\n}","import { geoCentroid as centroid, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt } from \"./math\"; // Azimuthal distance.\n\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda),\n      r;\n\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2),\n        sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n} // Angle opposite a, and contained between sides of lengths b and c.\n\n\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n} // Normalize longitude.\n\n\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [[p0[0], p0[1], sin(p0[1]), cos(p0[1])], [p1[0], p1[1], sin(p1[1]), cos(p1[1])], [p2[0], p2[1], sin(p2[1]), cos(p2[1])]];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n  var mean = [points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0), 2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3),\n        i; // Compute distance and azimuth from control points.\n\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    } // Arithmetic mean of interception points.\n\n\n    var point = mean.slice();\n\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22]).scale(380).center([22.5, 2]);\n}\nexport default function chamberlin(p0, p1, p2) {\n  // TODO order matters!\n  var c = centroid({\n    type: \"MultiPoint\",\n    coordinates: [p0, p1, p2]\n  }),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, pi, sin, sqrt, sqrtPi } from \"./math\";\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [2 / sqrtPi * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function (x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function () {\n  return projection(collignonRaw).scale(95.6464).center([0, 30]);\n}","import { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function (x, y) {\n    if (x) y *= sin(x) / x;\n    var cosλ = cos(x);\n    return [x, 2 * atan2(sqrt(cosλ * cosλ + tanPhi0 * tanPhi0 - y * y) - cosλ, tanPhi0 - y)];\n  } : function (x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(craigRaw).scale(249.828).clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt, sqrtPi } from \"./math\";\nvar sqrt3 = sqrt(3);\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function (x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function () {\n  return projection(crasterRaw).scale(156.19);\n}","import { asin, cos, sin } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalEqualAreaRaw).parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n  .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}","import { atan, cos, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalStereographicRaw).scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, pi, sqrt } from \"./math\";\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [alpha * lambda * (1 - abs(phi) / pi), alpha * phi];\n}\n\neckert1Raw.invert = function (x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [x / (alpha * (1 - abs(phi) / pi)), phi];\n};\n\nexport default function () {\n  return projection(eckert1Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, pi, sign, sin, sqrt } from \"./math\";\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [2 / sqrt(6 * pi) * lambda * alpha, sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)];\n}\n\neckert2Raw.invert = function (x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [x * sqrt(6 * pi) / (2 * alpha), sign(y) * asin((4 - alpha * alpha) / 3)];\n};\n\nexport default function () {\n  return projection(eckert2Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))), 4 / k * phi];\n}\n\neckert3Raw.invert = function (x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))), y * k / 2];\n};\n\nexport default function () {\n  return projection(eckert3Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n\n  return [2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)), 2 * sqrt(pi / (4 + pi)) * sin(phi)];\n}\n\neckert4Raw.invert = function (x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [x / (2 / sqrt(pi * (4 + pi)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfPi))];\n};\n\nexport default function () {\n  return projection(eckert4Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos, pi, sqrt } from \"./math\";\nexport function eckert5Raw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / sqrt(2 + pi), 2 * phi / sqrt(2 + pi)];\n}\n\neckert5Raw.invert = function (x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [k * x / (1 + cos(phi)), phi];\n};\n\nexport default function () {\n  return projection(eckert5Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n\n  k = sqrt(2 + pi);\n  return [lambda * (1 + cos(phi)) / k, 2 * phi / k];\n}\n\neckert6Raw.invert = function (x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [x * 2 * k / (1 + cos(y *= k)), asin((y + sin(y)) / j)];\n};\n\nexport default function () {\n  return projection(eckert6Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { augustRaw } from \"./august\";\nimport { abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nvar eisenlohrK = 3 + 2 * sqrt2;\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [eisenlohrK * (c * (v - 1 / v) - 2 * log(v)), eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))];\n}\n\neisenlohrRaw.invert = function (x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0],\n      phi = p[1],\n      i = 20,\n      p;\n  x /= eisenlohrK, y /= eisenlohrK;\n\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = sqrt2 * c1 + (c0 + s0) * k,\n        v1 = sqrt2 * c1 + (c0 - s0) * k,\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(eisenlohrRaw).scale(62.5271);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, radians, sqrt, tan } from \"./math\";\nvar faheyK = cos(35 * radians);\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function (x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(faheyRaw).scale(137.152);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, sqrtPi, tan } from \"./math\";\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2,\n      cosk = cos(k);\n  return [2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function (x, y) {\n  var k = atan(y / sqrtPi),\n      cosk = cos(k),\n      phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function () {\n  return projection(foucautRaw).scale(135.264);\n}","import { asin, cos, epsilon, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import projection from \"./index.js\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { geoEquirectangular, geoOrthographic } from \"d3-geo\";\nimport { asin, atan, degrees, radians, sin, tan } from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function (projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function (point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function (stream) {\n    var s1 = projection.stream(stream),\n        s0 = equirectangular.stream({\n      point: function point(lambda, phi) {\n        s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees);\n      },\n      lineStart: function lineStart() {\n        s1.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        s1.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        s1.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        s1.polygonEnd();\n      }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function (_) {\n      return arguments.length ? (projection[name](_), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function (_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function (_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n  return gilbert.scale(249.5);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt } from \"./math\";\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      x = r;\n      var i = 50,\n          delta;\n\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n        if (abs(delta) < epsilon2 || ! --i) break;\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (sinx - x_halfPi * 2 * (halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) - rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function (x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n} // Numerical integration: trapezoidal rule.\n\n\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n\n  for (var i = 1, x = a; i < n; ++i) {\n    s += 2 * f(x += h);\n  }\n\n  return s * 0.5 * h;\n}\n\nexport default function () {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function (_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function (_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.rotate([90, -40]).scale(91.7095).clipAngle(180 - 1e-3);\n}","import { abs, asin, cos, epsilon, pi, sin, sqrt } from \"./math\";\nexport default function (a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda,\n        deltaPhi,\n        i = 50;\n\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = lambda / pi * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n    return [lambda, phi];\n  };\n\n  return forward;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\nexport default function () {\n  return projection(ginzburg4Raw).scale(149.995);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435, 0.082742);\nexport default function () {\n  return projection(ginzburg5Raw).scale(153.93);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport { pi } from \"./math\";\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\nexport default function () {\n  return projection(ginzburg6Raw).scale(130.945);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2), phi * (1 + phi2 / 12)];\n}\n\nginzburg8Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50,\n      delta;\n\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  i = 50;\n  x /= 1 - 0.162388 * phi2;\n\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(ginzburg8Raw).scale(131.747);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965, 0.031762);\nexport default function () {\n  return projection(ginzburg9Raw).scale(131.087);\n}","import { halfPi, pi } from \"./math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function (x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n  return projectSquare;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nimport squareRaw from \"./square\";\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return point[0] *= sLambda, point[1] *= -sPhi, point;\n}\n\ngringortenRaw.invert = function (x, y) {\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n  if (lambda === 0) return [0, -(h + r * a)];\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta; // Slower but accurate bisection method.\n\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x,\n        x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n\n    do {\n      var g = sqrt(a2 - x * x),\n          f = x * (zeta + mu * g) + nu * asin(x / a) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  } // Newton-Raphson.\n  else {\n    x = epsilon, i = 25;\n\n    do {\n      var x2 = x * x,\n          g2 = sqrt(a2 - x2),\n          zetaMug = zeta + mu * g2,\n          f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n          df = zetaMug + (nu - mu * x2) / g2;\n      x -= delta = g2 ? f2 / df : 0;\n    } while (abs(delta) > epsilon && --i > 0);\n  }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = 1 - r2 + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function () {\n  return projection(squareRaw(gringortenRaw)).scale(239.75);\n}","import { abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh } from \"./math\"; // Returns [sn, cn, dn](u + iv|m).\n\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [[0, b[0] / b[1]], [1 / b[1], 0], [b[2] / b[1], 0]];\n  }\n\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [[a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c], [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c], [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]];\n} // Returns [sn, cn, dn, ph](u|m).\n\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [t - ai * b, b + ai * t, 1 - m * t * t / 2, u - ai];\n  }\n\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [t + ai * (twon - u) / (b * b), phi - ai * t * phi * (twon - u), phi + ai * t * phi * (twon + u), 2 * atan(exp(u)) - halfPi + ai * (twon - u) / b];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n} // Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\n\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi), ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)];\n  }\n\n  return [0, ellipticF(atan(sinhPsi), 1 - m) * sign(psi)];\n} // Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\n\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n\n  return phi / (pow(2, i) * a);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { ellipticF, ellipticFi, ellipticJi } from \"./elliptic\";\nimport { abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan } from \"./math\";\nimport squareRaw from \"./square\";\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)), -0.25 * log(t * t + 4 * x2) + 0.5 * log(y_1 * y_1 + x2)];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nguyouRaw.invert = function (x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [lambda, 2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi];\n};\n\nexport default function () {\n  return projection(squareRaw(guyouRaw)).scale(151.496);\n}","import { asin, sqrt } from \"../math.js\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, sin } from \"./math\";\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [lambda * cos(phi) / cos(phi /= 2), 2 * sin(phi)];\n}\n\nhammerQuarticAuthalicRaw.invert = function (x, y) {\n  var phi = 2 * asin(y / 2);\n  return [x * cos(phi / 2) / cos(phi), phi];\n};\n\nexport default function () {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function (_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p.scale(169.529);\n}","import { geoProjectionMutator as projectionMutator, geoCircle } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin } from \"./math\";\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [K * cosPhi0 * sin(lambda), (abs(lambda) > halfPi ? K : -K // rotate for back hemisphere\n    ) * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n} // Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\n\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n  return function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [atan2(y, x * cosPhi0 - z * sinPhi0), asin(z * cosPhi0 + x * sinPhi0)];\n  };\n}\n\nexport default function () {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  }; // Temporary hack; see hammerRetroazimuthalRotation.\n\n\n  p.rotate = function (_) {\n    if (!arguments.length) return _ = rotate_.call(p), _[1] += phi0 * degrees, _;\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function (stream) {\n    stream = stream_(stream);\n\n    stream.sphere = function () {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n\n      while (++i < n) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n\n      while (--i >= 0) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n\n    return stream;\n  };\n\n  return p.scale(79.4187).parallel(45).clipAngle(180 - 1e-3);\n}","import { range } from \"d3-array\";\nimport { geoStream, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { collignonRaw } from \"./collignon\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nimport { abs, floor, max, min, pi, radians, sqrtPi, tau } from \"./math\";\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600,\n    // for K=3; TODO automate\nhealpixLambert = cylindricalEqualAreaRaw(0);\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + dy1 * dy1 * 4 / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function (x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphere(step) {\n  return {\n    type: \"Polygon\",\n    coordinates: [range(-180, 180 + step / 2, step).map(function (x, i) {\n      return [x, i & 1 ? 90 - 1e-6 : healpixParallel];\n    }).concat(range(180, -180 - step / 2, -step).map(function (x, i) {\n      return [x, i & 1 ? -90 + 1e-6 : -healpixParallel];\n    }))]\n  };\n}\n\nexport default function () {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function (_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere(180 / H), sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(239.75);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n\n    if (t && t < 2) {\n      var theta = halfPi - phi,\n          i = 25,\n          delta;\n\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 - 0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n\n    return [rho * sin(omega), rho0 - rho * cos(omega)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [asin(x / sqrt(rho2)) * pi / Bt_Bt1, asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function (_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p.scale(167.774).center([0, 18.67]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport var sinuMollweidePhi = 0.7109889596207567;\nexport var sinuMollweideY = 0.0528035274542;\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function (x, y) {\n  return y > -sinuMollweidePhi ? mollweideRaw.invert(x, y - sinuMollweideY) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(sinuMollweideRaw).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs } from \"./math\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nimport { sinuMollweidePhi, sinuMollweideY } from \"./sinuMollweide\";\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function (x, y) {\n  return abs(y) > sinuMollweidePhi ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY)) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(homolosineRaw).scale(152.63);\n}","import { merge } from \"d3-array\";\nimport { geoStream, geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, radians } from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n\n    for (var j = 0; j < m; ++j) {\n      resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    }\n\n    p0 = p1;\n  }\n\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0,\n      phi0,\n      phi1,\n      lambda2,\n      phi2,\n      i,\n      n = lobes[0].length; // Northern Hemisphere\n\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda0 + epsilon, phi0 + epsilon], [lambda0 + epsilon, phi1 - epsilon], [lambda2 - epsilon, phi1 - epsilon], [lambda2 - epsilon, phi2 + epsilon]], 30));\n  } // Southern Hemisphere\n\n\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda2 - epsilon, phi2 - epsilon], [lambda2 - epsilon, phi1 + epsilon], [lambda0 + epsilon, phi1 + epsilon], [lambda0 + epsilon, phi0 - epsilon]], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function (project, lobes) {\n  var sphere = interpolateSphere(lobes);\n  lobes = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      return [[l[0][0] * radians, l[0][1] * radians], [l[1][0] * radians, l[1][1] * radians], [l[2][0] * radians, l[2][1] * radians]];\n    });\n  });\n  var bounds = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      var x0 = project(l[0][0], l[0][1])[0],\n          x1 = project(l[2][0], l[2][1])[0],\n          y0 = project(l[1][0], l[0][1])[1],\n          y1 = project(l[1][0], l[1][1])[1],\n          t;\n      if (y0 > y1) t = y0, y0 = y1, y1 = t;\n      return [[x0, y0], [x1, y1]];\n    });\n  });\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1,\n        lobe = lobes[+(phi < 0)];\n\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i) {\n      ;\n    }\n\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  } // Assumes mutually exclusive bounding boxes for lobes.\n\n\n  if (project.invert) forward.invert = function (x, y) {\n    var bound = bounds[+(y < 0)],\n        lobe = lobes[+(y < 0)];\n\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere, sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p;\n}","import { boggsRaw } from \"../boggs\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(boggsRaw, lobes).scale(160.857);\n}","import { homolosineRaw } from \"../homolosine\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(homolosineRaw, lobes).scale(152.63);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-90, 90], [0, 0]], [[0, 0], [90, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-90, -90], [0, 0]], [[0, 0], [90, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529).rotate([20, 0]);\n}","import { sinuMollweideRaw } from \"../sinuMollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 35], [-30, 90], [0, 35]], [[0, 35], [30, 90], [180, 35]]], [// southern hemisphere\n[[-180, -10], [-102, -90], [-65, -10]], [[-65, -10], [5, -90], [77, -10]], [[77, -10], [103, -90], [180, -10]]]];\nexport default function () {\n  return interrupt(sinuMollweideRaw, lobes).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { sinusoidalRaw } from \"../sinusoidal\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-110, 90], [-40, 0]], [[-40, 0], [0, 90], [40, 0]], [[40, 0], [110, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-110, -90], [-40, 0]], [[-40, 0], [0, -90], [40, 0]], [[40, 0], [110, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(sinusoidalRaw, lobes).scale(152.63).rotate([-20, 0]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt, tau } from \"./math\";\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function (x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function () {\n  return projection(kavrayskiy7Raw).scale(158.837);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin } from \"./math\";\nexport function lagrangeRaw(n) {\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [2 * sin(lambda) / c, (v - 1 / v) / c];\n  }\n\n  forward.invert = function (x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [atan2(2 * x, 1 - x2 - y2) / n, asin((t - 1) / (t + 1))];\n  };\n\n  return forward;\n}\nexport default function () {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function (_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p.scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2 } from \"./math\";\nvar pi_sqrt2 = pi / sqrt2;\nexport function larriveeRaw(lambda, phi) {\n  return [lambda * (1 + sqrt(cos(phi))) / 2, phi / (cos(phi / 2) * cos(lambda / 6))];\n}\n\nlarriveeRaw.invert = function (x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;else lambda += 6 * acos(pi_sqrt2 / y0);\n\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = phi / cosPhi_2 * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function () {\n  return projection(larriveeRaw).scale(97.2672);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, pi, sign } from \"./math\";\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)), phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))];\n}\n\nlaskowskiRaw.invert = function (x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(laskowskiRaw).scale(139.98);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2 } from \"./math\";\nexport function littrowRaw(lambda, phi) {\n  return [sin(lambda) / cos(phi), tan(phi) * cos(lambda)];\n}\n\nlittrowRaw.invert = function (x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      cosPhi = x ? sqrt1_2 * sqrt((y2_1 - sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1) : 1 / sqrt(y2_1);\n  return [asin(x * cosPhi), sign(y) * acos(cosPhi)];\n};\n\nexport default function () {\n  return projection(littrowRaw).scale(144.049).clipAngle(90 - 1e-3);\n}","import parallel1 from \"./parallel1\";\nimport { abs, cos, epsilon, halfPi, log, quarterPi, tan } from \"./math\";\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0 : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [abs(y) < epsilon ? x / cosPhi0 : abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon ? 0 : x * log(tan(lambda) / tanPhi0) / y, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(loximuthalRaw).parallel(40).scale(158.837);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, exp, log, quarterPi, pi, tan } from \"./math\";\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function (x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function () {\n  return projection(millerRaw).scale(108.318);\n}","import { geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, epsilon, sin, sqrt } from \"./math\";\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function (x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n      var denominator = br * br + bi * bi,\n          deltar,\n          deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64]).scale(1500).center([-160.908, 62.4864]).clipAngle(25);\n}\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38]).scale(1000).clipAngle(55).center([-96.5563, 38.8675]);\n}\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45]).scale(359.513).clipAngle(55).center([-117.474, 53.0628]);\n}\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18]).scale(209.091).center([20, 16.7214]).clipAngle(82);\n}\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10]).scale(250).clipAngle(130).center([-165, -10]);\n}\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt } from \"./math\";\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7, 9 * sin(theta / 3) / sqrt7];\n}\n\nmtFlatPolarParabolicRaw.invert = function (x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)), asin(sin(theta) * 3 * sqrt6 / 7)];\n};\n\nexport default function () {\n  return projection(mtFlatPolarParabolicRaw).scale(164.859);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2), 2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)];\n}\n\nmtFlatPolarQuarticRaw.invert = function (x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)), asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarQuarticRaw).scale(188.209);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [A * (0.5 + cos(theta)) * lambda / 1.5, A * theta];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function (x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [1.5 * x / (A * (0.5 + cos(theta))), asin((theta / 2 + sin(theta)) / (1 + pi / 4))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarSinusoidalRaw).scale(166.518);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function naturalEarthRaw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarthRaw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarthRaw).scale(175.295);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, epsilon, tan } from \"./math\";\nexport function nellHammerRaw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / 2, 2 * (phi - tan(phi / 2))];\n}\n\nnellHammerRaw.invert = function (x, y) {\n  var p = y / 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n\n  return [2 * x / (1 + cos(y)), y];\n};\n\nexport default function () {\n  return projection(nellHammerRaw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\"; // Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [lambda, phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))];\n}\n\npattersonRaw.invert = function (x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y,\n      delta;\n\n  do {\n    // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = (yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function () {\n  return projection(pattersonRaw).scale(139.319);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan } from \"./math\";\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [sin(k) / tanPhi, phi + (1 - cos(k)) / tanPhi];\n}\n\npolyconicRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10,\n      delta;\n\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  tanPhi = tan(phi);\n  return [(abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi), phi];\n};\n\nexport default function () {\n  return projection(polyconicRaw).scale(103.74);\n}","import adder from \"./adder.js\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import adder from \"./adder.js\";\nimport { areaStream, areaRingSum } from \"./area.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport { abs, degrees, epsilon, radians } from \"./math.js\";\nimport stream from \"./stream.js\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function sphere() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math.js\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import { atan2, cos, sin, sqrt } from \"../math\"; // Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n// Transform matrix for [a0, a1] -> [b0, b1].\n\nexport default function (a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n  return multiply([1, 0, a[0][0], 0, 1, a[0][1]], multiply([s, 0, 0, 0, s, 0], multiply([cos(phi), sin(phi), 0, -sin(phi), cos(phi), 0], [1, 0, -b[0][0], 0, 1, -b[0][1]])));\n} // Inverts a transform matrix.\n\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]), -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])];\n} // Multiplies two 3x2 matrices.\n\nexport function multiply(a, b) {\n  return [a[0] * b[0] + a[1] * b[3], a[0] * b[1] + a[1] * b[4], a[0] * b[2] + a[1] * b[5] + a[2], a[3] * b[0] + a[4] * b[3], a[3] * b[1] + a[4] * b[4], a[3] * b[2] + a[4] * b[5] + a[5]];\n} // Subtracts 2D vectors.\n\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n} // Magnitude of a 2D vector.\n\n\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n} // Angle between two 2D vectors.\n\n\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}","import { geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, degrees, epsilon, pi, radians, sin } from \"../math\";\nimport { default as matrix, multiply, inverse } from \"./matrix\"; // Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for final polyhedral net.  Defaults to -pi / 6 (for\n//    butterflies).\n\nexport default function (root, face, r) {\n  r = r == null ? -pi / 6 : r; // TODO automate\n\n  recurse(root, {\n    transform: [cos(r), sin(r), 0, -sin(r), cos(r), 0]\n  });\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face); // Find shared edge.\n\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m; // Replace shared edge in parent edges array.\n\n      var edges = parent.edges;\n\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n\n      edges = node.edges;\n\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n\n    if (node.children) {\n      node.children.forEach(function (child) {\n        recurse(child, node);\n      });\n    }\n\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n\n    if (t = node.transform) {\n      return [t[0] * point[0] + t[1] * point[1] + t[2], -(t[3] * point[0] + t[4] * point[1] + t[5])];\n    }\n\n    point[1] = -point[1];\n    return point;\n  } // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n\n\n  if (hasInverse(root)) forward.invert = function (x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n\n    if (t) {\n      t = inverse(t);\n      point = [t[0] * point[0] + t[1] * point[1] + t[2], t[3] * point[0] + t[4] * point[1] + t[5]];\n    }\n\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function (stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return proj;\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {\n    type: \"MultiPoint\",\n    coordinates: node.face\n  },\n      notPoles = node.face.filter(function (d) {\n    return abs(d[1]) !== 90;\n  }),\n      b = bounds({\n    type: \"MultiPoint\",\n    coordinates: notPoles\n  }),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0]; // TODO\n\n  var c = dx === 180 || dx === 360 ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2] : centroid(multiPoint); // First find the shared edge…\n\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n} // Tests equality of two spherical points.\n\n\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n} // Finds a shared edge given two clockwise polygons.\n\n\nfunction sharedEdge(a, b) {\n  var x,\n      y,\n      n = a.length,\n      found = null;\n\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n} // Converts an array of n face vertices to an array of n + 1 edges.\n\n\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n\n  for (var a = face[n - 1], i = 0; i < n; ++i) {\n    edges.push([a, a = face[i]]);\n  }\n\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}","import { atan, cos, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [[0, 90], [-90, 0], [0, 0], [90, 0], [180, 0], [0, -90]];\nexport default [[0, 2, 1], [0, 3, 2], [5, 1, 2], [5, 2, 3], [0, 1, 4], [0, 4, 3], [5, 4, 1], [5, 3, 4]].map(function (face) {\n  return face.map(function (i) {\n    return octahedron[i];\n  });\n});","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { pi } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(101.858).center([0, 45]);\n}","import { geoCentroid as centroid, geoProjection as projection } from \"d3-geo\";\nimport { collignonRaw } from \"../collignon\";\nimport { pi, sqrt } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function (x, y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(121.906).center([0, 48.5904]);\n}","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { asin, atan2, cos, degrees, max, min, pi, radians, sin } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = face.length === 6 ? centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    }) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function (face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794, a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794, a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794]), spherical([b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794, b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794, b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794]));\n      a = b;\n    }\n\n    return hexagon;\n  });\n  var cornerNormals = [];\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n  w5.forEach(function (hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n\n    for (var i = 0; i < n; ++i) {\n      w5.push([face[i], hexagon[(i * 2 + 2) % (2 * n)], hexagon[(i * 2 + 1) % (2 * n)]]);\n      parents.push(j);\n      normals.push(cross(cartesian(hexagon[(i * 2 + 2) % (2 * n)]), cartesian(hexagon[(i * 2 + 1) % (2 * n)])));\n    }\n  });\n  var faces = w5.map(function (face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n  parents.forEach(function (d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5;\n    var n = cornerNormals[hexagon];\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1 : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2 : hexagon];\n  }\n\n  return polyhedral(faces[0], face).scale(110.625).center([0, 45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) {\n    s += a[i] * b[i];\n  }\n\n  return s;\n}\n\nfunction cross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // Converts 3D Cartesian to spherical coordinates (degrees).\n\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]) * degrees, asin(max(-1, min(1, cartesian[2]))) * degrees];\n} // Converts spherical coordinates (degrees) to 3D Cartesian.\n\n\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n}","export default function () {}","import { geoStream } from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\nexport default function (object, projection) {\n  var stream = projection.stream,\n      project;\n  if (!stream) throw new Error(\"invalid projection\");\n\n  switch (object && object.type) {\n    case \"Feature\":\n      project = projectFeature;\n      break;\n\n    case \"FeatureCollection\":\n      project = projectFeatureCollection;\n      break;\n\n    default:\n      project = projectGeometry;\n      break;\n  }\n\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function (f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function (o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n\n  switch (o.type) {\n    case \"Point\":\n      sink = sinkPoint;\n      break;\n\n    case \"MultiPoint\":\n      sink = sinkPoint;\n      break;\n\n    case \"LineString\":\n      sink = sinkLine;\n      break;\n\n    case \"MultiLineString\":\n      sink = sinkLine;\n      break;\n\n    case \"Polygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"MultiPolygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"Sphere\":\n      sink = sinkPolygon;\n      break;\n\n    default:\n      return null;\n  }\n\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\nvar sinkPoint = {\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  result: function result() {\n    var result = !points.length ? null : points.length < 2 ? {\n      type: \"Point\",\n      coordinates: points[0]\n    } : {\n      type: \"MultiPoint\",\n      coordinates: points\n    };\n    points = [];\n    return result;\n  }\n};\nvar sinkLine = {\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function result() {\n    var result = !lines.length ? null : lines.length < 2 ? {\n      type: \"LineString\",\n      coordinates: lines[0]\n    } : {\n      type: \"MultiLineString\",\n      coordinates: lines\n    };\n    lines = [];\n    return result;\n  }\n};\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    var n = points.length;\n\n    if (n) {\n      do {\n        points.push(points[0].slice());\n      } while (++n < 4);\n\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function result() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = []; // https://github.com/d3/d3/issues/1558\n\n    lines.forEach(function (ring) {\n      if (clockwise(ring)) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      var point = hole[0];\n      polygons.some(function (polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n    lines = [];\n    return !polygons.length ? null : polygons.length > 1 ? {\n      type: \"MultiPolygon\",\n      coordinates: polygons\n    } : {\n      type: \"Polygon\",\n      coordinates: polygons[0]\n    };\n  }\n};","export default function (ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n  while (++i < n) {\n    area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  }\n\n  return area <= 0;\n}","export default function (ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\n  }\n\n  return contains;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, halfPi, pi, sign, sqrt1_2 } from \"../math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function (x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * (x0 + (y > 0 ? 1 : -1) * d),\n          y1 = -s * (y0 + (x > 0 ? 1 : -1) * d);\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n  return projection(projectQuincuncial).rotate([-90, -90, 45]).clipAngle(180 - 1e-3);\n}","import { gringortenRaw } from \"../gringorten\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(gringortenRaw).scale(176.423);\n}","import { guyouRaw } from \"../guyou\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(guyouRaw).scale(111.48);\n}","export default function (o, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(coordinates) {\n    coordinates[0] = +coordinates[0].toFixed(digits);\n    coordinates[1] = +coordinates[1].toFixed(digits);\n  }\n\n  function quantizePoints(coordinates) {\n    coordinates.forEach(quantizePoint);\n  }\n\n  function quantizePolygon(coordinates) {\n    coordinates.forEach(quantizePoints);\n  }\n\n  function quantizeGeometry(o) {\n    if (o) switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n      case \"LineString\":\n        quantizePoints(o.coordinates);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        quantizePolygon(o.coordinates);\n        break;\n\n      case \"MultiPolygon\":\n        o.coordinates.forEach(quantizePolygon);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function quantizeFeature(o) {\n    quantizeGeometry(o.geometry);\n  }\n\n  if (o) switch (o.type) {\n    case \"Feature\":\n      quantizeFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(quantizeFeature);\n      break;\n\n    default:\n      quantizeGeometry(o);\n      break;\n  }\n  return o;\n}","import { abs, acos, asin, atan, cos, epsilon, pi, sin, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [sin(E) * cotPhi, phi + (1 - cos(E)) * cotPhi - phi0];\n  } // TODO return null for points outside outline.\n\n\n  forward.invert = function (x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10,\n        delta;\n\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(rectangularPolyconicRaw).scale(131.215);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians } from \"./math\";\nvar K = [[0.9986, -0.062], [1.0000, 0.0000], [0.9986, 0.0620], [0.9954, 0.1240], [0.9900, 0.1860], [0.9822, 0.2480], [0.9730, 0.3100], [0.9600, 0.3720], [0.9427, 0.4340], [0.9216, 0.4958], [0.8962, 0.5571], [0.8679, 0.6176], [0.8350, 0.6769], [0.7986, 0.7346], [0.7597, 0.7903], [0.7186, 0.8435], [0.6732, 0.8936], [0.6213, 0.9394], [0.5722, 0.9761], [0.5322, 1.0000]];\nK.forEach(function (d) {\n  d[1] *= 1.0144;\n});\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)];\n}\n\nrobinsonRaw.invert = function (x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50,\n          delta;\n\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n\n      break;\n    }\n  } while (--i0 >= 0);\n\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), phi * radians];\n};\n\nexport default function () {\n  return projection(robinsonRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { acos, asin, atan2, cos, degrees, radians, sin, sqrt } from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [k * cosPhi * sin(lambda), k * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [atan2(x * sinc, rho * sqrt(1 - sinc * sinc)), rho ? asin(y * sinc / rho) : 0];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [coordinates[0] * cosOmega / A, y / A];\n  }\n\n  forward.invert = function (x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\nexport default function () {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega); // As a multiple of radius.\n\n  p.distance = function (_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function (_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p.scale(432.147).clipAngle(acos(1 / distance) * degrees - 1e-6);\n}","var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180,\n    x0e = x0 + epsilon,\n    x1 = 180,\n    x1e = x1 - epsilon,\n    y0 = -90,\n    y0e = y0 + epsilon,\n    y1 = 90,\n    y1e = y1 - epsilon;\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1 ? [0, y] // pole\n  : [x0, quantize(y)]; // antimeridian\n}\n\nfunction clampPoint(p) {\n  if (p[0] <= x0e) p[0] = x0;else if (p[0] >= x1e) p[0] = x1;\n  if (p[1] <= y0e) p[1] = y0;else if (p[1] >= y1e) p[1] = y1;\n}\n\nfunction clampPoints(points) {\n  points.forEach(clampPoint);\n} // For each ring, detect where it crosses the antimeridian or pole.\n\n\nfunction extractFragments(polygon, fragments) {\n  for (var j = 0, m = polygon.length; j < m; ++j) {\n    var ring = polygon[j];\n    ring.polygon = polygon; // By default, assume that this ring doesn’t need any stitching.\n\n    fragments.push(ring);\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1]; // If this is an antimeridian or polar point…\n\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        clampPoint(point); // Advance through any antimeridian or polar points…\n\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        } // If this was just a single antimeridian or polar point,\n        // we don’t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n\n\n        if (k === i + 1) continue; // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n\n        if (i) {\n          var fragmentBefore = ring.slice(0, i + 1);\n          fragmentBefore.polygon = polygon;\n          fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        } // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop(); // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n\n\n        if (k >= n) break; // Otherwise, add the remaining ring fragment and continue.\n\n        fragments.push(ring = ring.slice(k - 1));\n        ring[0] = normalizePoint(ring[0][1]);\n        ring.polygon = polygon;\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n\n  polygon.length = 0;\n} // Now stitch the fragments back together into rings.\n// TODO remove empty polygons.\n\n\nfunction stitchFragments(fragments) {\n  var i,\n      n = fragments.length; // To connect the fragments start-to-end, create a simple index by end.\n\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment; // For each fragment…\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment[0];\n    end = fragment[fragment.length - 1]; // If this fragment is closed, add it as a standalone ring.\n\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  } // For each open fragment…\n\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n\n    if (fragment) {\n      start = fragment[0];\n      end = fragment[fragment.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end]; // If this fragment is closed, add it as a standalone ring.\n\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment[0]];\n        startFragment.pop(); // drop the shared coordinate\n\n        fragments[startFragment.index] = null;\n        fragment = startFragment.concat(fragment);\n        fragment.polygon = startFragment.polygon;\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment[endFragment.length - 1]];\n        fragment.pop(); // drop the shared coordinate\n\n        fragment = fragment.concat(endFragment);\n        fragment.polygon = endFragment.polygon;\n        fragment.index = n++;\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n      } else {\n        fragment.push(fragment[0]); // close ring\n\n        fragment.polygon.push(fragment);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(o) {\n  stitchGeometry(o.geometry);\n}\n\nfunction stitchGeometry(o) {\n  if (!o) return;\n  var fragments, i, n;\n\n  switch (o.type) {\n    case \"GeometryCollection\":\n      {\n        o.geometries.forEach(stitchGeometry);\n        return;\n      }\n\n    case \"Point\":\n      {\n        clampPoint(o.coordinates);\n        break;\n      }\n\n    case \"MultiPoint\":\n    case \"LineString\":\n      {\n        clampPoints(o.coordinates);\n        break;\n      }\n\n    case \"MultiLineString\":\n      {\n        o.coordinates.forEach(clampPoints);\n        break;\n      }\n\n    case \"Polygon\":\n      {\n        extractFragments(o.coordinates, fragments = []);\n        break;\n      }\n\n    case \"MultiPolygon\":\n      {\n        fragments = [], i = -1, n = o.coordinates.length;\n\n        while (++i < n) {\n          extractFragments(o.coordinates[i], fragments);\n        }\n\n        break;\n      }\n\n    default:\n      return;\n  }\n\n  stitchFragments(fragments);\n}\n\nexport default function (o) {\n  if (o) switch (o.type) {\n    case \"Feature\":\n      stitchFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(stitchFeature);\n      break;\n\n    default:\n      stitchGeometry(o);\n      break;\n  }\n  return o;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, quarterPi, sin, tan } from \"./math\";\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [lambda * (0.74482 - 0.34588 * s * s), 1.70711 * t];\n}\n\ntimesRaw.invert = function (x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [x / (0.74482 - 0.34588 * s * s), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(timesRaw).scale(146.153);\n}","import { geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { asin, degrees, pi, sin, radians } from \"./math\"; // Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\n\nexport default function (raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoGnomonicRaw as gnomonicRaw } from \"d3-geo\";\nimport { cos } from \"./math\";\nimport twoPoint from \"./twoPoint\";\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39]).clipAngle(60).scale(400);\n}\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { acos, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport twoPoint from \"./twoPoint\"; // TODO clip to ellipse\n\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [(za - zb) / (2 * z0), ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)];\n  }\n\n  forward.invert = function (x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0), (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)];\n  };\n\n  return forward;\n}\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39]).clipAngle(130).scale(122.571);\n}\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2, sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2];\n}\n\nvanDerGrintenRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x), sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))];\n};\n\nexport default function () {\n  return projection(vanDerGrintenRaw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [sign(lambda) * pi * x1, sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))];\n}\n\nvanDerGrinten2Raw.invert = function (x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [sign(x) * pi * (B - A), sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten2Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A), pi * y1];\n}\n\nvanDerGrinten3Raw.invert = function (x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0, halfPi * sin(2 * atan(y1))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten3Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, halfPi, pi, sign, sqrt } from \"./math\";\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [sign(lambda) * halfPi * x1, sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)];\n}\n\nvanDerGrinten4Raw.invert = function (x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n\n  return [sign(x) * (sqrt(D * D + 4) + D) * pi / 4, halfPi * B];\n};\n\nexport default function () {\n  return projection(vanDerGrinten4Raw).scale(127.16);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { sqrt, pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\nexport default function () {\n  return projection(wagner4Raw).scale(176.84);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function (x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function () {\n  return projection(wagner6Raw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [2.66723 * c0 * c1 * sin(lambda), 1.24104 * s * c1];\n}\n\nwagner7Raw.invert = function (x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [3 * atan2(x * tan(c), 2.66723 * p), p && asin(y * sin(c) / (1.24104 * 0.90631 * p))];\n};\n\nexport default function () {\n  return projection(wagner7Raw).scale(172.632);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [sinLambda * cosPhi - cosLambda * sin1_Phi, -cosLambda * cosPhi - sinLambda * sin1_Phi];\n}\n\nwiechelRaw.invert = function (x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0];\n};\n\nexport default function () {\n  return projection(wiechelRaw).rotate([0, -90, 45]).scale(124.75).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { aitoffRaw } from \"./aitoff\";\nimport { halfPi, epsilon, sin, cos, sqrt, abs, acos } from \"./math\";\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [(coordinates[0] + lambda / halfPi) / 2, (coordinates[1] + phi) / 2];\n}\n\nwinkel3Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 25;\n\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(winkel3Raw).scale(158.837);\n}","export { default as geoAiry, airyRaw as geoAiryRaw } from \"./src/airy\";\nexport { default as geoAitoff, aitoffRaw as geoAitoffRaw } from \"./src/aitoff\";\nexport { default as geoArmadillo, armadilloRaw as geoArmadilloRaw } from \"./src/armadillo\";\nexport { default as geoAugust, augustRaw as geoAugustRaw } from \"./src/august\";\nexport { default as geoBaker, bakerRaw as geoBakerRaw } from \"./src/baker\";\nexport { default as geoBerghaus, berghausRaw as geoBerghausRaw } from \"./src/berghaus\";\nexport { default as geoBoggs, boggsRaw as geoBoggsRaw } from \"./src/boggs\";\nexport { default as geoBonne, bonneRaw as geoBonneRaw } from \"./src/bonne\";\nexport { default as geoBottomley, bottomleyRaw as geoBottomleyRaw } from \"./src/bottomley\";\nexport { default as geoBromley, bromleyRaw as geoBromleyRaw } from \"./src/bromley\";\nexport { default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica } from \"./src/chamberlin\";\nexport { default as geoCollignon, collignonRaw as geoCollignonRaw } from \"./src/collignon\";\nexport { default as geoCraig, craigRaw as geoCraigRaw } from \"./src/craig\";\nexport { default as geoCraster, crasterRaw as geoCrasterRaw } from \"./src/craster\";\nexport { default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw } from \"./src/cylindricalEqualArea\";\nexport { default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw } from \"./src/cylindricalStereographic\";\nexport { default as geoEckert1, eckert1Raw as geoEckert1Raw } from \"./src/eckert1.js\";\nexport { default as geoEckert2, eckert2Raw as geoEckert2Raw } from \"./src/eckert2.js\";\nexport { default as geoEckert3, eckert3Raw as geoEckert3Raw } from \"./src/eckert3.js\";\nexport { default as geoEckert4, eckert4Raw as geoEckert4Raw } from \"./src/eckert4.js\";\nexport { default as geoEckert5, eckert5Raw as geoEckert5Raw } from \"./src/eckert5.js\";\nexport { default as geoEckert6, eckert6Raw as geoEckert6Raw } from \"./src/eckert6.js\";\nexport { default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw } from \"./src/eisenlohr.js\";\nexport { default as geoFahey, faheyRaw as geoFaheyRaw } from \"./src/fahey.js\";\nexport { default as geoFoucaut, foucautRaw as geoFoucautRaw } from \"./src/foucaut.js\";\nexport { default as geoGilbert } from \"./src/gilbert.js\";\nexport { default as geoGingery, gingeryRaw as geoGingeryRaw } from \"./src/gingery.js\";\nexport { default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw } from \"./src/ginzburg4.js\";\nexport { default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw } from \"./src/ginzburg5.js\";\nexport { default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw } from \"./src/ginzburg6.js\";\nexport { default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw } from \"./src/ginzburg8.js\";\nexport { default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw } from \"./src/ginzburg9.js\";\nexport { default as geoGringorten, gringortenRaw as geoGringortenRaw } from \"./src/gringorten.js\";\nexport { default as geoGuyou, guyouRaw as geoGuyouRaw } from \"./src/guyou.js\";\nexport { default as geoHammer, hammerRaw as geoHammerRaw } from \"./src/hammer.js\";\nexport { default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw } from \"./src/hammerRetroazimuthal.js\";\nexport { default as geoHealpix, healpixRaw as geoHealpixRaw } from \"./src/healpix.js\";\nexport { default as geoHill, hillRaw as geoHillRaw } from \"./src/hill.js\";\nexport { default as geoHomolosine, homolosineRaw as geoHomolosineRaw } from \"./src/homolosine.js\";\nexport { default as geoInterrupt } from \"./src/interrupted/index\";\nexport { default as geoInterruptedBoggs } from \"./src/interrupted/boggs\";\nexport { default as geoInterruptedHomolosine } from \"./src/interrupted/homolosine\";\nexport { default as geoInterruptedMollweide } from \"./src/interrupted/mollweide\";\nexport { default as geoInterruptedMollweideHemispheres } from \"./src/interrupted/mollweideHemispheres\";\nexport { default as geoInterruptedSinuMollweide } from \"./src/interrupted/sinuMollweide\";\nexport { default as geoInterruptedSinusoidal } from \"./src/interrupted/sinusoidal\";\nexport { default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw } from \"./src/kavrayskiy7.js\";\nexport { default as geoLagrange, lagrangeRaw as geoLagrangeRaw } from \"./src/lagrange.js\";\nexport { default as geoLarrivee, larriveeRaw as geoLarriveeRaw } from \"./src/larrivee\";\nexport { default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw } from \"./src/laskowski\";\nexport { default as geoLittrow, littrowRaw as geoLittrowRaw } from \"./src/littrow.js\";\nexport { default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw } from \"./src/loximuthal.js\";\nexport { default as geoMiller, millerRaw as geoMillerRaw } from \"./src/miller\";\nexport { default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee } from \"./src/modifiedStereographic\";\nexport { default as geoMollweide, mollweideRaw as geoMollweideRaw } from \"./src/mollweide\";\nexport { default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw } from \"./src/mtFlatPolarParabolic\";\nexport { default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw } from \"./src/mtFlatPolarQuartic\";\nexport { default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw } from \"./src/mtFlatPolarSinusoidal\";\nexport { default as geoNaturalEarth, naturalEarthRaw as geoNaturalEarthRaw } from \"./src/naturalEarth\";\nexport { default as geoNellHammer, nellHammerRaw as geoNellHammerRaw } from \"./src/nellHammer\";\nexport { default as geoPatterson, pattersonRaw as geoPattersonRaw } from \"./src/patterson\";\nexport { default as geoPolyconic, polyconicRaw as geoPolyconicRaw } from \"./src/polyconic\";\nexport { default as geoPolyhedral } from \"./src/polyhedral/index.js\";\nexport { default as geoPolyhedralButterfly } from \"./src/polyhedral/butterfly.js\";\nexport { default as geoPolyhedralCollignon } from \"./src/polyhedral/collignon.js\";\nexport { default as geoPolyhedralWaterman } from \"./src/polyhedral/waterman.js\";\nexport { default as geoProject } from \"./src/project/index\";\nexport { default as geoGringortenQuincuncial } from \"./src/quincuncial/gringorten.js\";\nexport { default as geoPeirceQuincuncial } from \"./src/quincuncial/peirce.js\";\nexport { default as geoPierceQuincuncial } from \"./src/quincuncial/peirce.js\"; // DEPRECATED misspelling\n\nexport { default as geoQuantize } from \"./src/quantize\";\nexport { default as geoQuincuncial } from \"./src/quincuncial/index.js\";\nexport { default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw } from \"./src/rectangularPolyconic\";\nexport { default as geoRobinson, robinsonRaw as geoRobinsonRaw } from \"./src/robinson\";\nexport { default as geoSatellite, satelliteRaw as geoSatelliteRaw } from \"./src/satellite\";\nexport { default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw } from \"./src/sinuMollweide\";\nexport { default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw } from \"./src/sinusoidal\";\nexport { default as geoStitch } from \"./src/stitch\";\nexport { default as geoTimes, timesRaw as geoTimesRaw } from \"./src/times\";\nexport { default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa } from \"./src/twoPointAzimuthal\";\nexport { default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa } from \"./src/twoPointEquidistant\";\nexport { default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw } from \"./src/vanDerGrinten\";\nexport { default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw } from \"./src/vanDerGrinten2\";\nexport { default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw } from \"./src/vanDerGrinten3\";\nexport { default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw } from \"./src/vanDerGrinten4\";\nexport { default as geoWagner4, wagner4Raw as geoWagner4Raw } from \"./src/wagner4.js\";\nexport { default as geoWagner6, wagner6Raw as geoWagner6Raw } from \"./src/wagner6.js\";\nexport { default as geoWagner7, wagner7Raw as geoWagner7Raw } from \"./src/wagner7.js\";\nexport { default as geoWiechel, wiechelRaw as geoWiechelRaw } from \"./src/wiechel.js\";\nexport { default as geoWinkel3, winkel3Raw as geoWinkel3Raw } from \"./src/winkel3\";","export default function (x) {\n  return x;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n    return point;\n  };\n}","import transform from \"./transform\";\nexport default function (topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(bboxGeometry);\n        break;\n\n      case \"Point\":\n        bboxPoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(bboxPoint);\n        break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology),\n        p0,\n        p1 = new Array(2),\n        name,\n        x0 = Infinity,\n        y0 = x0,\n        x1 = -x0,\n        y1 = -x0;\n    topology.arcs.forEach(function (arc) {\n      var i = -1,\n          n = arc.length;\n\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","import reverse from \"./reverse\";\nimport transform from \"./transform\";\nexport default function (topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k].slice(), k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p.slice());\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0].slice());\n    }\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","export default function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nexport default function (topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) {\n    arcs[i] = i;\n  }\n  return {\n    type: \"MultiLineString\",\n    arcs: stitch(topology, arcs)\n  };\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({\n      i: i,\n      g: geom\n    });\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"LineString\":\n        extract1(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        extract2(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        extract3(o.arcs);\n        break;\n    }\n  }\n\n  geometry(object);\n  geomsByArc.forEach(filter == null ? function (geoms) {\n    arcs.push(geoms[0].i);\n  } : function (geoms) {\n    if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i);\n  });\n  return arcs;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function (topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"Polygon\":\n        extract(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        o.arcs.forEach(extract);\n        break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function (ring) {\n      ring.forEach(function (arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {\n      type: \"Polygon\",\n      arcs: [ring]\n    }).coordinates[0]);\n  }\n\n  polygons.forEach(function (polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n  polygons.forEach(function (polygon) {\n    delete polygon._;\n  });\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function (polygons) {\n      var arcs = [],\n          n; // Extract the exterior (unique) arcs.\n\n      polygons.forEach(function (polygon) {\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      }); // Stitch the arcs into one or more rings.\n\n      arcs = stitch(topology, arcs); // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}","export default function (a, x) {\n  var lo = 0,\n      hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;else hi = mid;\n  }\n\n  return lo;\n}","import bisect from \"./bisect\";\nexport default function (objects) {\n  var indexesByArc = {},\n      // arc index -> array of object indexes\n  neighbors = objects.map(function () {\n    return [];\n  });\n\n  function line(arcs, i) {\n    arcs.forEach(function (a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function (arc) {\n      line(arc, i);\n    });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function (o) {\n      geometry(o, i);\n    });else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function MultiPolygon(arcs, i) {\n      arcs.forEach(function (arc) {\n        polygon(arc, i);\n      });\n    }\n  };\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j],\n            ik = indexes[k],\n            n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}","import bbox from \"./bbox\";\nexport default function (topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology),\n      name,\n      dx = bb[0],\n      kx = (bb[2] - dx) / (n - 1) || 1,\n      dy = bb[1],\n      ky = (bb[3] - dy) / (n - 1) || 1;\n\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(quantizePoint);\n        break;\n    }\n  }\n\n  topology.arcs.forEach(function (arc) {\n    var i = 1,\n        j = 1,\n        n = arc.length,\n        pi = arc[0],\n        x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n        y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n        pj,\n        x1,\n        y1;\n\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n\n    arc.length = j;\n  });\n\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n  return topology;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0, x0 = x1;\n    point[1] = y1 - y0, y0 = y1;\n    return point;\n  };\n}","export { default as bbox } from \"./src/bbox\";\nexport { default as feature } from \"./src/feature\";\nexport { default as mesh, meshArcs } from \"./src/mesh\";\nexport { default as merge, mergeArcs } from \"./src/merge\";\nexport { default as neighbors } from \"./src/neighbors\";\nexport { default as quantize } from \"./src/quantize\";\nexport { default as transform } from \"./src/transform\";\nexport { default as untransform } from \"./src/untransform\";"],"sourceRoot":""}